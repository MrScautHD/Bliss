### YamlMime:ManagedReference
items:
- uid: Bliss.CSharp.Effects.Effect
  commentId: T:Bliss.CSharp.Effects.Effect
  id: Effect
  parent: Bliss.CSharp.Effects
  children:
  - Bliss.CSharp.Effects.Effect.#ctor(Veldrid.GraphicsDevice,Veldrid.VertexLayoutDescription,System.Byte[],System.Byte[],Veldrid.SpecializationConstant[])
  - Bliss.CSharp.Effects.Effect.#ctor(Veldrid.GraphicsDevice,Veldrid.VertexLayoutDescription,System.String,System.String,Veldrid.SpecializationConstant[])
  - Bliss.CSharp.Effects.Effect.AddBufferLayout(Bliss.CSharp.Graphics.Pipelines.Buffers.SimpleBufferLayout)
  - Bliss.CSharp.Effects.Effect.AddTextureLayout(Bliss.CSharp.Graphics.Pipelines.Textures.SimpleTextureLayout)
  - Bliss.CSharp.Effects.Effect.Apply(Veldrid.CommandList,Bliss.CSharp.Materials.Material)
  - Bliss.CSharp.Effects.Effect.Dispose(System.Boolean)
  - Bliss.CSharp.Effects.Effect.GetBufferLayout(System.String)
  - Bliss.CSharp.Effects.Effect.GetBufferLayoutKeys
  - Bliss.CSharp.Effects.Effect.GetBufferLayoutSlot(System.String)
  - Bliss.CSharp.Effects.Effect.GetBufferLayouts
  - Bliss.CSharp.Effects.Effect.GetPipeline(Bliss.CSharp.Graphics.Pipelines.SimplePipelineDescription)
  - Bliss.CSharp.Effects.Effect.GetTextureLayout(System.String)
  - Bliss.CSharp.Effects.Effect.GetTextureLayoutKeys
  - Bliss.CSharp.Effects.Effect.GetTextureLayoutSlot(System.String)
  - Bliss.CSharp.Effects.Effect.GetTextureLayouts
  - Bliss.CSharp.Effects.Effect.GraphicsDevice
  - Bliss.CSharp.Effects.Effect.LoadBytecode(System.String)
  - Bliss.CSharp.Effects.Effect.Shader
  - Bliss.CSharp.Effects.Effect.ShaderSet
  - Bliss.CSharp.Effects.Effect.VertexLayout
  langs:
  - csharp
  - vb
  name: Effect
  nameWithType: Effect
  fullName: Bliss.CSharp.Effects.Effect
  type: Class
  source:
    remote:
      path: src/Bliss/CSharp/Effects/Effect.cs
      branch: main
      repo: https://github.com/MrScautHD/Bliss.git
    id: Effect
    path: ../src/Bliss/CSharp/Effects/Effect.cs
    startLine: 10
  assemblies:
  - Bliss
  namespace: Bliss.CSharp.Effects
  syntax:
    content: 'public class Effect : Disposable, IDisposable'
    content.vb: Public Class Effect Inherits Disposable Implements IDisposable
  inheritance:
  - System.Object
  - Bliss.CSharp.Disposable
  implements:
  - System.IDisposable
  inheritedMembers:
  - Bliss.CSharp.Disposable.HasDisposed
  - Bliss.CSharp.Disposable.Dispose
  - Bliss.CSharp.Disposable.ThrowIfDisposed
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Bliss.CSharp.Effects.Effect.GraphicsDevice
  commentId: P:Bliss.CSharp.Effects.Effect.GraphicsDevice
  id: GraphicsDevice
  parent: Bliss.CSharp.Effects.Effect
  langs:
  - csharp
  - vb
  name: GraphicsDevice
  nameWithType: Effect.GraphicsDevice
  fullName: Bliss.CSharp.Effects.Effect.GraphicsDevice
  type: Property
  source:
    remote:
      path: src/Bliss/CSharp/Effects/Effect.cs
      branch: main
      repo: https://github.com/MrScautHD/Bliss.git
    id: GraphicsDevice
    path: ../src/Bliss/CSharp/Effects/Effect.cs
    startLine: 15
  assemblies:
  - Bliss
  namespace: Bliss.CSharp.Effects
  summary: The graphics device used for creating and managing graphical resources.
  example: []
  syntax:
    content: public GraphicsDevice GraphicsDevice { get; }
    parameters: []
    return:
      type: Veldrid.GraphicsDevice
    content.vb: Public Property GraphicsDevice As GraphicsDevice
  overload: Bliss.CSharp.Effects.Effect.GraphicsDevice*
- uid: Bliss.CSharp.Effects.Effect.Shader
  commentId: F:Bliss.CSharp.Effects.Effect.Shader
  id: Shader
  parent: Bliss.CSharp.Effects.Effect
  langs:
  - csharp
  - vb
  name: Shader
  nameWithType: Effect.Shader
  fullName: Bliss.CSharp.Effects.Effect.Shader
  type: Field
  source:
    remote:
      path: src/Bliss/CSharp/Effects/Effect.cs
      branch: main
      repo: https://github.com/MrScautHD/Bliss.git
    id: Shader
    path: ../src/Bliss/CSharp/Effects/Effect.cs
    startLine: 20
  assemblies:
  - Bliss
  namespace: Bliss.CSharp.Effects
  summary: Represents a pair of shaders consisting of a vertex shader and a fragment shader.
  example: []
  syntax:
    content: public readonly (Shader VertShader, Shader FragShader) Shader
    return:
      type: System.ValueTuple{Veldrid.Shader,Veldrid.Shader}
    content.vb: Public ReadOnly Shader As (VertShader As Shader, FragShader As Shader)
- uid: Bliss.CSharp.Effects.Effect.VertexLayout
  commentId: F:Bliss.CSharp.Effects.Effect.VertexLayout
  id: VertexLayout
  parent: Bliss.CSharp.Effects.Effect
  langs:
  - csharp
  - vb
  name: VertexLayout
  nameWithType: Effect.VertexLayout
  fullName: Bliss.CSharp.Effects.Effect.VertexLayout
  type: Field
  source:
    remote:
      path: src/Bliss/CSharp/Effects/Effect.cs
      branch: main
      repo: https://github.com/MrScautHD/Bliss.git
    id: VertexLayout
    path: ../src/Bliss/CSharp/Effects/Effect.cs
    startLine: 25
  assemblies:
  - Bliss
  namespace: Bliss.CSharp.Effects
  summary: Describes the layout of vertex data for a graphics pipeline.
  example: []
  syntax:
    content: public readonly VertexLayoutDescription VertexLayout
    return:
      type: Veldrid.VertexLayoutDescription
    content.vb: Public ReadOnly VertexLayout As VertexLayoutDescription
- uid: Bliss.CSharp.Effects.Effect.ShaderSet
  commentId: F:Bliss.CSharp.Effects.Effect.ShaderSet
  id: ShaderSet
  parent: Bliss.CSharp.Effects.Effect
  langs:
  - csharp
  - vb
  name: ShaderSet
  nameWithType: Effect.ShaderSet
  fullName: Bliss.CSharp.Effects.Effect.ShaderSet
  type: Field
  source:
    remote:
      path: src/Bliss/CSharp/Effects/Effect.cs
      branch: main
      repo: https://github.com/MrScautHD/Bliss.git
    id: ShaderSet
    path: ../src/Bliss/CSharp/Effects/Effect.cs
    startLine: 30
  assemblies:
  - Bliss
  namespace: Bliss.CSharp.Effects
  summary: Represents a description of a shader set, including vertex layout details, shader information, and optional specialization constants.
  example: []
  syntax:
    content: public readonly ShaderSetDescription ShaderSet
    return:
      type: Veldrid.ShaderSetDescription
    content.vb: Public ReadOnly ShaderSet As ShaderSetDescription
- uid: Bliss.CSharp.Effects.Effect.#ctor(Veldrid.GraphicsDevice,Veldrid.VertexLayoutDescription,System.String,System.String,Veldrid.SpecializationConstant[])
  commentId: M:Bliss.CSharp.Effects.Effect.#ctor(Veldrid.GraphicsDevice,Veldrid.VertexLayoutDescription,System.String,System.String,Veldrid.SpecializationConstant[])
  id: '#ctor(Veldrid.GraphicsDevice,Veldrid.VertexLayoutDescription,System.String,System.String,Veldrid.SpecializationConstant[])'
  parent: Bliss.CSharp.Effects.Effect
  langs:
  - csharp
  - vb
  name: Effect(GraphicsDevice, VertexLayoutDescription, string, string, SpecializationConstant[]?)
  nameWithType: Effect.Effect(GraphicsDevice, VertexLayoutDescription, string, string, SpecializationConstant[]?)
  fullName: Bliss.CSharp.Effects.Effect.Effect(Veldrid.GraphicsDevice, Veldrid.VertexLayoutDescription, string, string, Veldrid.SpecializationConstant[]?)
  type: Constructor
  source:
    remote:
      path: src/Bliss/CSharp/Effects/Effect.cs
      branch: main
      repo: https://github.com/MrScautHD/Bliss.git
    id: .ctor
    path: ../src/Bliss/CSharp/Effects/Effect.cs
    startLine: 56
  assemblies:
  - Bliss
  namespace: Bliss.CSharp.Effects
  summary: Initializes a new instance of the <xref href="Bliss.CSharp.Effects.Effect" data-throw-if-not-resolved="false"></xref> class using shader file paths.
  example: []
  syntax:
    content: public Effect(GraphicsDevice graphicsDevice, VertexLayoutDescription vertexLayout, string vertPath, string fragPath, SpecializationConstant[]? constants = null)
    parameters:
    - id: graphicsDevice
      type: Veldrid.GraphicsDevice
      description: The <xref href="Bliss.CSharp.Effects.Effect.GraphicsDevice" data-throw-if-not-resolved="false"></xref> used for rendering.
    - id: vertexLayout
      type: Veldrid.VertexLayoutDescription
      description: The <xref href="Veldrid.VertexLayoutDescription" data-throw-if-not-resolved="false"></xref> defining the vertex structure.
    - id: vertPath
      type: System.String
      description: The path to the vertex shader file.
    - id: fragPath
      type: System.String
      description: The path to the fragment shader file.
    - id: constants
      type: Veldrid.SpecializationConstant[]
      description: Optional specialization constants for shader customization.
    content.vb: Public Sub New(graphicsDevice As GraphicsDevice, vertexLayout As VertexLayoutDescription, vertPath As String, fragPath As String, constants As SpecializationConstant() = Nothing)
  overload: Bliss.CSharp.Effects.Effect.#ctor*
  nameWithType.vb: Effect.New(GraphicsDevice, VertexLayoutDescription, String, String, SpecializationConstant())
  fullName.vb: Bliss.CSharp.Effects.Effect.New(Veldrid.GraphicsDevice, Veldrid.VertexLayoutDescription, String, String, Veldrid.SpecializationConstant())
  name.vb: New(GraphicsDevice, VertexLayoutDescription, String, String, SpecializationConstant())
- uid: Bliss.CSharp.Effects.Effect.#ctor(Veldrid.GraphicsDevice,Veldrid.VertexLayoutDescription,System.Byte[],System.Byte[],Veldrid.SpecializationConstant[])
  commentId: M:Bliss.CSharp.Effects.Effect.#ctor(Veldrid.GraphicsDevice,Veldrid.VertexLayoutDescription,System.Byte[],System.Byte[],Veldrid.SpecializationConstant[])
  id: '#ctor(Veldrid.GraphicsDevice,Veldrid.VertexLayoutDescription,System.Byte[],System.Byte[],Veldrid.SpecializationConstant[])'
  parent: Bliss.CSharp.Effects.Effect
  langs:
  - csharp
  - vb
  name: Effect(GraphicsDevice, VertexLayoutDescription, byte[], byte[], SpecializationConstant[]?)
  nameWithType: Effect.Effect(GraphicsDevice, VertexLayoutDescription, byte[], byte[], SpecializationConstant[]?)
  fullName: Bliss.CSharp.Effects.Effect.Effect(Veldrid.GraphicsDevice, Veldrid.VertexLayoutDescription, byte[], byte[], Veldrid.SpecializationConstant[]?)
  type: Constructor
  source:
    remote:
      path: src/Bliss/CSharp/Effects/Effect.cs
      branch: main
      repo: https://github.com/MrScautHD/Bliss.git
    id: .ctor
    path: ../src/Bliss/CSharp/Effects/Effect.cs
    startLine: 66
  assemblies:
  - Bliss
  namespace: Bliss.CSharp.Effects
  summary: Initializes a new instance of the <xref href="Bliss.CSharp.Effects.Effect" data-throw-if-not-resolved="false"></xref> class using shader bytecode.
  example: []
  syntax:
    content: public Effect(GraphicsDevice graphicsDevice, VertexLayoutDescription vertexLayout, byte[] vertBytes, byte[] fragBytes, SpecializationConstant[]? constants = null)
    parameters:
    - id: graphicsDevice
      type: Veldrid.GraphicsDevice
      description: The <xref href="Bliss.CSharp.Effects.Effect.GraphicsDevice" data-throw-if-not-resolved="false"></xref> used for rendering.
    - id: vertexLayout
      type: Veldrid.VertexLayoutDescription
      description: The <xref href="Veldrid.VertexLayoutDescription" data-throw-if-not-resolved="false"></xref> defining the vertex structure.
    - id: vertBytes
      type: System.Byte[]
      description: The compiled bytecode for the vertex shader.
    - id: fragBytes
      type: System.Byte[]
      description: The compiled bytecode for the fragment shader.
    - id: constants
      type: Veldrid.SpecializationConstant[]
      description: Optional specialization constants for shader customization.
    content.vb: Public Sub New(graphicsDevice As GraphicsDevice, vertexLayout As VertexLayoutDescription, vertBytes As Byte(), fragBytes As Byte(), constants As SpecializationConstant() = Nothing)
  overload: Bliss.CSharp.Effects.Effect.#ctor*
  nameWithType.vb: Effect.New(GraphicsDevice, VertexLayoutDescription, Byte(), Byte(), SpecializationConstant())
  fullName.vb: Bliss.CSharp.Effects.Effect.New(Veldrid.GraphicsDevice, Veldrid.VertexLayoutDescription, Byte(), Byte(), Veldrid.SpecializationConstant())
  name.vb: New(GraphicsDevice, VertexLayoutDescription, Byte(), Byte(), SpecializationConstant())
- uid: Bliss.CSharp.Effects.Effect.LoadBytecode(System.String)
  commentId: M:Bliss.CSharp.Effects.Effect.LoadBytecode(System.String)
  id: LoadBytecode(System.String)
  parent: Bliss.CSharp.Effects.Effect
  langs:
  - csharp
  - vb
  name: LoadBytecode(string)
  nameWithType: Effect.LoadBytecode(string)
  fullName: Bliss.CSharp.Effects.Effect.LoadBytecode(string)
  type: Method
  source:
    remote:
      path: src/Bliss/CSharp/Effects/Effect.cs
      branch: main
      repo: https://github.com/MrScautHD/Bliss.git
    id: LoadBytecode
    path: ../src/Bliss/CSharp/Effects/Effect.cs
    startLine: 99
  assemblies:
  - Bliss
  namespace: Bliss.CSharp.Effects
  summary: Loads the bytecode from the specified shader file path.
  example: []
  syntax:
    content: public static byte[] LoadBytecode(string path)
    parameters:
    - id: path
      type: System.String
      description: The file path to the shader source code.
    return:
      type: System.Byte[]
      description: A byte array containing the bytecode from the shader file.
    content.vb: Public Shared Function LoadBytecode(path As String) As Byte()
  overload: Bliss.CSharp.Effects.Effect.LoadBytecode*
  nameWithType.vb: Effect.LoadBytecode(String)
  fullName.vb: Bliss.CSharp.Effects.Effect.LoadBytecode(String)
  name.vb: LoadBytecode(String)
- uid: Bliss.CSharp.Effects.Effect.GetBufferLayoutKeys
  commentId: M:Bliss.CSharp.Effects.Effect.GetBufferLayoutKeys
  id: GetBufferLayoutKeys
  parent: Bliss.CSharp.Effects.Effect
  langs:
  - csharp
  - vb
  name: GetBufferLayoutKeys()
  nameWithType: Effect.GetBufferLayoutKeys()
  fullName: Bliss.CSharp.Effects.Effect.GetBufferLayoutKeys()
  type: Method
  source:
    remote:
      path: src/Bliss/CSharp/Effects/Effect.cs
      branch: main
      repo: https://github.com/MrScautHD/Bliss.git
    id: GetBufferLayoutKeys
    path: ../src/Bliss/CSharp/Effects/Effect.cs
    startLine: 118
  assemblies:
  - Bliss
  namespace: Bliss.CSharp.Effects
  summary: Retrieves the collection of keys representing buffer layouts associated with the Effect instance.
  example: []
  syntax:
    content: public IEnumerable<string> GetBufferLayoutKeys()
    return:
      type: System.Collections.Generic.IEnumerable{System.String}
      description: An enumerable collection of string keys corresponding to the buffer layouts.
    content.vb: Public Function GetBufferLayoutKeys() As IEnumerable(Of String)
  overload: Bliss.CSharp.Effects.Effect.GetBufferLayoutKeys*
- uid: Bliss.CSharp.Effects.Effect.GetBufferLayouts
  commentId: M:Bliss.CSharp.Effects.Effect.GetBufferLayouts
  id: GetBufferLayouts
  parent: Bliss.CSharp.Effects.Effect
  langs:
  - csharp
  - vb
  name: GetBufferLayouts()
  nameWithType: Effect.GetBufferLayouts()
  fullName: Bliss.CSharp.Effects.Effect.GetBufferLayouts()
  type: Method
  source:
    remote:
      path: src/Bliss/CSharp/Effects/Effect.cs
      branch: main
      repo: https://github.com/MrScautHD/Bliss.git
    id: GetBufferLayouts
    path: ../src/Bliss/CSharp/Effects/Effect.cs
    startLine: 126
  assemblies:
  - Bliss
  namespace: Bliss.CSharp.Effects
  summary: Retrieves the collection of buffer layouts defined for this effect.
  example: []
  syntax:
    content: public IEnumerable<SimpleBufferLayout> GetBufferLayouts()
    return:
      type: System.Collections.Generic.IEnumerable{Bliss.CSharp.Graphics.Pipelines.Buffers.SimpleBufferLayout}
      description: An enumerable collection of <xref href="Bliss.CSharp.Graphics.Pipelines.Buffers.SimpleBufferLayout" data-throw-if-not-resolved="false"></xref> representing the buffer layouts in this effect.
    content.vb: Public Function GetBufferLayouts() As IEnumerable(Of SimpleBufferLayout)
  overload: Bliss.CSharp.Effects.Effect.GetBufferLayouts*
- uid: Bliss.CSharp.Effects.Effect.GetBufferLayout(System.String)
  commentId: M:Bliss.CSharp.Effects.Effect.GetBufferLayout(System.String)
  id: GetBufferLayout(System.String)
  parent: Bliss.CSharp.Effects.Effect
  langs:
  - csharp
  - vb
  name: GetBufferLayout(string)
  nameWithType: Effect.GetBufferLayout(string)
  fullName: Bliss.CSharp.Effects.Effect.GetBufferLayout(string)
  type: Method
  source:
    remote:
      path: src/Bliss/CSharp/Effects/Effect.cs
      branch: main
      repo: https://github.com/MrScautHD/Bliss.git
    id: GetBufferLayout
    path: ../src/Bliss/CSharp/Effects/Effect.cs
    startLine: 135
  assemblies:
  - Bliss
  namespace: Bliss.CSharp.Effects
  summary: Retrieves a buffer layout associated with the specified name.
  example: []
  syntax:
    content: public SimpleBufferLayout GetBufferLayout(string name)
    parameters:
    - id: name
      type: System.String
      description: The name of the buffer layout to retrieve.
    return:
      type: Bliss.CSharp.Graphics.Pipelines.Buffers.SimpleBufferLayout
      description: The <xref href="Bliss.CSharp.Graphics.Pipelines.Buffers.SimpleBufferLayout" data-throw-if-not-resolved="false"></xref> associated with the given name.
    content.vb: Public Function GetBufferLayout(name As String) As SimpleBufferLayout
  overload: Bliss.CSharp.Effects.Effect.GetBufferLayout*
  nameWithType.vb: Effect.GetBufferLayout(String)
  fullName.vb: Bliss.CSharp.Effects.Effect.GetBufferLayout(String)
  name.vb: GetBufferLayout(String)
- uid: Bliss.CSharp.Effects.Effect.GetBufferLayoutSlot(System.String)
  commentId: M:Bliss.CSharp.Effects.Effect.GetBufferLayoutSlot(System.String)
  id: GetBufferLayoutSlot(System.String)
  parent: Bliss.CSharp.Effects.Effect
  langs:
  - csharp
  - vb
  name: GetBufferLayoutSlot(string)
  nameWithType: Effect.GetBufferLayoutSlot(string)
  fullName: Bliss.CSharp.Effects.Effect.GetBufferLayoutSlot(string)
  type: Method
  source:
    remote:
      path: src/Bliss/CSharp/Effects/Effect.cs
      branch: main
      repo: https://github.com/MrScautHD/Bliss.git
    id: GetBufferLayoutSlot
    path: ../src/Bliss/CSharp/Effects/Effect.cs
    startLine: 145
  assemblies:
  - Bliss
  namespace: Bliss.CSharp.Effects
  summary: Retrieves the slot index of a buffer layout by its name.
  example: []
  syntax:
    content: public uint GetBufferLayoutSlot(string name)
    parameters:
    - id: name
      type: System.String
      description: The name of the buffer layout whose slot index is to be retrieved.
    return:
      type: System.UInt32
      description: The slot index of the specified buffer layout.
    content.vb: Public Function GetBufferLayoutSlot(name As String) As UInteger
  overload: Bliss.CSharp.Effects.Effect.GetBufferLayoutSlot*
  exceptions:
  - type: System.Collections.Generic.KeyNotFoundException
    commentId: T:System.Collections.Generic.KeyNotFoundException
    description: Thrown when the buffer layout with the specified name does not exist.
  nameWithType.vb: Effect.GetBufferLayoutSlot(String)
  fullName.vb: Bliss.CSharp.Effects.Effect.GetBufferLayoutSlot(String)
  name.vb: GetBufferLayoutSlot(String)
- uid: Bliss.CSharp.Effects.Effect.AddBufferLayout(Bliss.CSharp.Graphics.Pipelines.Buffers.SimpleBufferLayout)
  commentId: M:Bliss.CSharp.Effects.Effect.AddBufferLayout(Bliss.CSharp.Graphics.Pipelines.Buffers.SimpleBufferLayout)
  id: AddBufferLayout(Bliss.CSharp.Graphics.Pipelines.Buffers.SimpleBufferLayout)
  parent: Bliss.CSharp.Effects.Effect
  langs:
  - csharp
  - vb
  name: AddBufferLayout(SimpleBufferLayout)
  nameWithType: Effect.AddBufferLayout(SimpleBufferLayout)
  fullName: Bliss.CSharp.Effects.Effect.AddBufferLayout(Bliss.CSharp.Graphics.Pipelines.Buffers.SimpleBufferLayout)
  type: Method
  source:
    remote:
      path: src/Bliss/CSharp/Effects/Effect.cs
      branch: main
      repo: https://github.com/MrScautHD/Bliss.git
    id: AddBufferLayout
    path: ../src/Bliss/CSharp/Effects/Effect.cs
    startLine: 163
  assemblies:
  - Bliss
  namespace: Bliss.CSharp.Effects
  summary: Adds a new buffer layout to the effect.
  example: []
  syntax:
    content: public void AddBufferLayout(SimpleBufferLayout bufferLayout)
    parameters:
    - id: bufferLayout
      type: Bliss.CSharp.Graphics.Pipelines.Buffers.SimpleBufferLayout
      description: The <xref href="Bliss.CSharp.Graphics.Pipelines.Buffers.SimpleBufferLayout" data-throw-if-not-resolved="false"></xref> to be added.
    content.vb: Public Sub AddBufferLayout(bufferLayout As SimpleBufferLayout)
  overload: Bliss.CSharp.Effects.Effect.AddBufferLayout*
- uid: Bliss.CSharp.Effects.Effect.GetTextureLayoutKeys
  commentId: M:Bliss.CSharp.Effects.Effect.GetTextureLayoutKeys
  id: GetTextureLayoutKeys
  parent: Bliss.CSharp.Effects.Effect
  langs:
  - csharp
  - vb
  name: GetTextureLayoutKeys()
  nameWithType: Effect.GetTextureLayoutKeys()
  fullName: Bliss.CSharp.Effects.Effect.GetTextureLayoutKeys()
  type: Method
  source:
    remote:
      path: src/Bliss/CSharp/Effects/Effect.cs
      branch: main
      repo: https://github.com/MrScautHD/Bliss.git
    id: GetTextureLayoutKeys
    path: ../src/Bliss/CSharp/Effects/Effect.cs
    startLine: 173
  assemblies:
  - Bliss
  namespace: Bliss.CSharp.Effects
  summary: Retrieves the collection of keys that correspond to the texture layouts defined in this effect.
  example: []
  syntax:
    content: public IEnumerable<string> GetTextureLayoutKeys()
    return:
      type: System.Collections.Generic.IEnumerable{System.String}
      description: A collection of strings representing the keys for the texture layouts.
    content.vb: Public Function GetTextureLayoutKeys() As IEnumerable(Of String)
  overload: Bliss.CSharp.Effects.Effect.GetTextureLayoutKeys*
- uid: Bliss.CSharp.Effects.Effect.GetTextureLayouts
  commentId: M:Bliss.CSharp.Effects.Effect.GetTextureLayouts
  id: GetTextureLayouts
  parent: Bliss.CSharp.Effects.Effect
  langs:
  - csharp
  - vb
  name: GetTextureLayouts()
  nameWithType: Effect.GetTextureLayouts()
  fullName: Bliss.CSharp.Effects.Effect.GetTextureLayouts()
  type: Method
  source:
    remote:
      path: src/Bliss/CSharp/Effects/Effect.cs
      branch: main
      repo: https://github.com/MrScautHD/Bliss.git
    id: GetTextureLayouts
    path: ../src/Bliss/CSharp/Effects/Effect.cs
    startLine: 181
  assemblies:
  - Bliss
  namespace: Bliss.CSharp.Effects
  summary: Retrieves the collection of texture layouts associated with the current effect.
  example: []
  syntax:
    content: public IEnumerable<SimpleTextureLayout> GetTextureLayouts()
    return:
      type: System.Collections.Generic.IEnumerable{Bliss.CSharp.Graphics.Pipelines.Textures.SimpleTextureLayout}
      description: An enumerable collection of <xref href="Bliss.CSharp.Graphics.Pipelines.Textures.SimpleTextureLayout" data-throw-if-not-resolved="false"></xref> instances representing the texture layouts.
    content.vb: Public Function GetTextureLayouts() As IEnumerable(Of SimpleTextureLayout)
  overload: Bliss.CSharp.Effects.Effect.GetTextureLayouts*
- uid: Bliss.CSharp.Effects.Effect.GetTextureLayout(System.String)
  commentId: M:Bliss.CSharp.Effects.Effect.GetTextureLayout(System.String)
  id: GetTextureLayout(System.String)
  parent: Bliss.CSharp.Effects.Effect
  langs:
  - csharp
  - vb
  name: GetTextureLayout(string)
  nameWithType: Effect.GetTextureLayout(string)
  fullName: Bliss.CSharp.Effects.Effect.GetTextureLayout(string)
  type: Method
  source:
    remote:
      path: src/Bliss/CSharp/Effects/Effect.cs
      branch: main
      repo: https://github.com/MrScautHD/Bliss.git
    id: GetTextureLayout
    path: ../src/Bliss/CSharp/Effects/Effect.cs
    startLine: 192
  assemblies:
  - Bliss
  namespace: Bliss.CSharp.Effects
  summary: Retrieves a specific texture layout by its name.
  example: []
  syntax:
    content: public SimpleTextureLayout GetTextureLayout(string name)
    parameters:
    - id: name
      type: System.String
      description: The name of the texture layout to retrieve.
    return:
      type: Bliss.CSharp.Graphics.Pipelines.Textures.SimpleTextureLayout
      description: The texture layout associated with the specified name.
    content.vb: Public Function GetTextureLayout(name As String) As SimpleTextureLayout
  overload: Bliss.CSharp.Effects.Effect.GetTextureLayout*
  nameWithType.vb: Effect.GetTextureLayout(String)
  fullName.vb: Bliss.CSharp.Effects.Effect.GetTextureLayout(String)
  name.vb: GetTextureLayout(String)
- uid: Bliss.CSharp.Effects.Effect.GetTextureLayoutSlot(System.String)
  commentId: M:Bliss.CSharp.Effects.Effect.GetTextureLayoutSlot(System.String)
  id: GetTextureLayoutSlot(System.String)
  parent: Bliss.CSharp.Effects.Effect
  langs:
  - csharp
  - vb
  name: GetTextureLayoutSlot(string)
  nameWithType: Effect.GetTextureLayoutSlot(string)
  fullName: Bliss.CSharp.Effects.Effect.GetTextureLayoutSlot(string)
  type: Method
  source:
    remote:
      path: src/Bliss/CSharp/Effects/Effect.cs
      branch: main
      repo: https://github.com/MrScautHD/Bliss.git
    id: GetTextureLayoutSlot
    path: ../src/Bliss/CSharp/Effects/Effect.cs
    startLine: 202
  assemblies:
  - Bliss
  namespace: Bliss.CSharp.Effects
  summary: Retrieves the texture slot index for the specified texture name in the effect's texture layouts.
  example: []
  syntax:
    content: public uint GetTextureLayoutSlot(string name)
    parameters:
    - id: name
      type: System.String
      description: The name of the texture whose slot index is to be retrieved.
    return:
      type: System.UInt32
      description: The zero-based index of the texture slot corresponding to the specified texture name.
    content.vb: Public Function GetTextureLayoutSlot(name As String) As UInteger
  overload: Bliss.CSharp.Effects.Effect.GetTextureLayoutSlot*
  exceptions:
  - type: System.Collections.Generic.KeyNotFoundException
    commentId: T:System.Collections.Generic.KeyNotFoundException
    description: Thrown when the specified texture name does not exist in the texture layouts.
  nameWithType.vb: Effect.GetTextureLayoutSlot(String)
  fullName.vb: Bliss.CSharp.Effects.Effect.GetTextureLayoutSlot(String)
  name.vb: GetTextureLayoutSlot(String)
- uid: Bliss.CSharp.Effects.Effect.AddTextureLayout(Bliss.CSharp.Graphics.Pipelines.Textures.SimpleTextureLayout)
  commentId: M:Bliss.CSharp.Effects.Effect.AddTextureLayout(Bliss.CSharp.Graphics.Pipelines.Textures.SimpleTextureLayout)
  id: AddTextureLayout(Bliss.CSharp.Graphics.Pipelines.Textures.SimpleTextureLayout)
  parent: Bliss.CSharp.Effects.Effect
  langs:
  - csharp
  - vb
  name: AddTextureLayout(SimpleTextureLayout)
  nameWithType: Effect.AddTextureLayout(SimpleTextureLayout)
  fullName: Bliss.CSharp.Effects.Effect.AddTextureLayout(Bliss.CSharp.Graphics.Pipelines.Textures.SimpleTextureLayout)
  type: Method
  source:
    remote:
      path: src/Bliss/CSharp/Effects/Effect.cs
      branch: main
      repo: https://github.com/MrScautHD/Bliss.git
    id: AddTextureLayout
    path: ../src/Bliss/CSharp/Effects/Effect.cs
    startLine: 220
  assemblies:
  - Bliss
  namespace: Bliss.CSharp.Effects
  summary: Adds a texture layout to the effect.
  example: []
  syntax:
    content: public void AddTextureLayout(SimpleTextureLayout textureLayout)
    parameters:
    - id: textureLayout
      type: Bliss.CSharp.Graphics.Pipelines.Textures.SimpleTextureLayout
      description: The <xref href="Bliss.CSharp.Graphics.Pipelines.Textures.SimpleTextureLayout" data-throw-if-not-resolved="false"></xref> defining the texture layout to be added.
    content.vb: Public Sub AddTextureLayout(textureLayout As SimpleTextureLayout)
  overload: Bliss.CSharp.Effects.Effect.AddTextureLayout*
- uid: Bliss.CSharp.Effects.Effect.GetPipeline(Bliss.CSharp.Graphics.Pipelines.SimplePipelineDescription)
  commentId: M:Bliss.CSharp.Effects.Effect.GetPipeline(Bliss.CSharp.Graphics.Pipelines.SimplePipelineDescription)
  id: GetPipeline(Bliss.CSharp.Graphics.Pipelines.SimplePipelineDescription)
  parent: Bliss.CSharp.Effects.Effect
  langs:
  - csharp
  - vb
  name: GetPipeline(SimplePipelineDescription)
  nameWithType: Effect.GetPipeline(SimplePipelineDescription)
  fullName: Bliss.CSharp.Effects.Effect.GetPipeline(Bliss.CSharp.Graphics.Pipelines.SimplePipelineDescription)
  type: Method
  source:
    remote:
      path: src/Bliss/CSharp/Effects/Effect.cs
      branch: main
      repo: https://github.com/MrScautHD/Bliss.git
    id: GetPipeline
    path: ../src/Bliss/CSharp/Effects/Effect.cs
    startLine: 231
  assemblies:
  - Bliss
  namespace: Bliss.CSharp.Effects
  summary: Retrieves or creates a pipeline for the given pipeline description.
  example: []
  syntax:
    content: public SimplePipeline GetPipeline(SimplePipelineDescription pipelineDescription)
    parameters:
    - id: pipelineDescription
      type: Bliss.CSharp.Graphics.Pipelines.SimplePipelineDescription
      description: The description of the pipeline to retrieve or create.
    return:
      type: Bliss.CSharp.Graphics.Pipelines.SimplePipeline
      description: A <xref href="Bliss.CSharp.Graphics.Pipelines.SimplePipeline" data-throw-if-not-resolved="false"></xref> configured with the specified description.
    content.vb: Public Function GetPipeline(pipelineDescription As SimplePipelineDescription) As SimplePipeline
  overload: Bliss.CSharp.Effects.Effect.GetPipeline*
- uid: Bliss.CSharp.Effects.Effect.Apply(Veldrid.CommandList,Bliss.CSharp.Materials.Material)
  commentId: M:Bliss.CSharp.Effects.Effect.Apply(Veldrid.CommandList,Bliss.CSharp.Materials.Material)
  id: Apply(Veldrid.CommandList,Bliss.CSharp.Materials.Material)
  parent: Bliss.CSharp.Effects.Effect
  langs:
  - csharp
  - vb
  name: Apply(CommandList, Material?)
  nameWithType: Effect.Apply(CommandList, Material?)
  fullName: Bliss.CSharp.Effects.Effect.Apply(Veldrid.CommandList, Bliss.CSharp.Materials.Material?)
  type: Method
  source:
    remote:
      path: src/Bliss/CSharp/Effects/Effect.cs
      branch: main
      repo: https://github.com/MrScautHD/Bliss.git
    id: Apply
    path: ../src/Bliss/CSharp/Effects/Effect.cs
    startLine: 245
  assemblies:
  - Bliss
  namespace: Bliss.CSharp.Effects
  summary: Apply the state effect immediately before rendering it.
  example: []
  syntax:
    content: public virtual void Apply(CommandList commandList, Material? material = null)
    parameters:
    - id: commandList
      type: Veldrid.CommandList
    - id: material
      type: Bliss.CSharp.Materials.Material
    content.vb: Public Overridable Sub Apply(commandList As CommandList, material As Material = Nothing)
  overload: Bliss.CSharp.Effects.Effect.Apply*
  nameWithType.vb: Effect.Apply(CommandList, Material)
  fullName.vb: Bliss.CSharp.Effects.Effect.Apply(Veldrid.CommandList, Bliss.CSharp.Materials.Material)
  name.vb: Apply(CommandList, Material)
- uid: Bliss.CSharp.Effects.Effect.Dispose(System.Boolean)
  commentId: M:Bliss.CSharp.Effects.Effect.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: Bliss.CSharp.Effects.Effect
  langs:
  - csharp
  - vb
  name: Dispose(bool)
  nameWithType: Effect.Dispose(bool)
  fullName: Bliss.CSharp.Effects.Effect.Dispose(bool)
  type: Method
  source:
    remote:
      path: src/Bliss/CSharp/Effects/Effect.cs
      branch: main
      repo: https://github.com/MrScautHD/Bliss.git
    id: Dispose
    path: ../src/Bliss/CSharp/Effects/Effect.cs
    startLine: 247
  assemblies:
  - Bliss
  namespace: Bliss.CSharp.Effects
  summary: Disposes of the object and releases associated resources.
  example: []
  syntax:
    content: protected override void Dispose(bool disposing)
    parameters:
    - id: disposing
      type: System.Boolean
      description: True if called from user code; false if called from a finalizer.
    content.vb: Protected Overrides Sub Dispose(disposing As Boolean)
  overridden: Bliss.CSharp.Disposable.Dispose(System.Boolean)
  overload: Bliss.CSharp.Effects.Effect.Dispose*
  nameWithType.vb: Effect.Dispose(Boolean)
  fullName.vb: Bliss.CSharp.Effects.Effect.Dispose(Boolean)
  name.vb: Dispose(Boolean)
references:
- uid: Bliss.CSharp.Effects
  commentId: N:Bliss.CSharp.Effects
  href: Bliss.html
  name: Bliss.CSharp.Effects
  nameWithType: Bliss.CSharp.Effects
  fullName: Bliss.CSharp.Effects
  spec.csharp:
  - uid: Bliss
    name: Bliss
    href: Bliss.html
  - name: .
  - uid: Bliss.CSharp
    name: CSharp
    href: Bliss.CSharp.html
  - name: .
  - uid: Bliss.CSharp.Effects
    name: Effects
    href: Bliss.CSharp.Effects.html
  spec.vb:
  - uid: Bliss
    name: Bliss
    href: Bliss.html
  - name: .
  - uid: Bliss.CSharp
    name: CSharp
    href: Bliss.CSharp.html
  - name: .
  - uid: Bliss.CSharp.Effects
    name: Effects
    href: Bliss.CSharp.Effects.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Bliss.CSharp.Disposable
  commentId: T:Bliss.CSharp.Disposable
  parent: Bliss.CSharp
  href: Bliss.CSharp.Disposable.html
  name: Disposable
  nameWithType: Disposable
  fullName: Bliss.CSharp.Disposable
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.idisposable
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: Bliss.CSharp.Disposable.HasDisposed
  commentId: P:Bliss.CSharp.Disposable.HasDisposed
  parent: Bliss.CSharp.Disposable
  href: Bliss.CSharp.Disposable.html#Bliss_CSharp_Disposable_HasDisposed
  name: HasDisposed
  nameWithType: Disposable.HasDisposed
  fullName: Bliss.CSharp.Disposable.HasDisposed
- uid: Bliss.CSharp.Disposable.Dispose
  commentId: M:Bliss.CSharp.Disposable.Dispose
  parent: Bliss.CSharp.Disposable
  href: Bliss.CSharp.Disposable.html#Bliss_CSharp_Disposable_Dispose
  name: Dispose()
  nameWithType: Disposable.Dispose()
  fullName: Bliss.CSharp.Disposable.Dispose()
  spec.csharp:
  - uid: Bliss.CSharp.Disposable.Dispose
    name: Dispose
    href: Bliss.CSharp.Disposable.html#Bliss_CSharp_Disposable_Dispose
  - name: (
  - name: )
  spec.vb:
  - uid: Bliss.CSharp.Disposable.Dispose
    name: Dispose
    href: Bliss.CSharp.Disposable.html#Bliss_CSharp_Disposable_Dispose
  - name: (
  - name: )
- uid: Bliss.CSharp.Disposable.ThrowIfDisposed
  commentId: M:Bliss.CSharp.Disposable.ThrowIfDisposed
  parent: Bliss.CSharp.Disposable
  href: Bliss.CSharp.Disposable.html#Bliss_CSharp_Disposable_ThrowIfDisposed
  name: ThrowIfDisposed()
  nameWithType: Disposable.ThrowIfDisposed()
  fullName: Bliss.CSharp.Disposable.ThrowIfDisposed()
  spec.csharp:
  - uid: Bliss.CSharp.Disposable.ThrowIfDisposed
    name: ThrowIfDisposed
    href: Bliss.CSharp.Disposable.html#Bliss_CSharp_Disposable_ThrowIfDisposed
  - name: (
  - name: )
  spec.vb:
  - uid: Bliss.CSharp.Disposable.ThrowIfDisposed
    name: ThrowIfDisposed
    href: Bliss.CSharp.Disposable.html#Bliss_CSharp_Disposable_ThrowIfDisposed
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Bliss.CSharp
  commentId: N:Bliss.CSharp
  href: Bliss.html
  name: Bliss.CSharp
  nameWithType: Bliss.CSharp
  fullName: Bliss.CSharp
  spec.csharp:
  - uid: Bliss
    name: Bliss
    href: Bliss.html
  - name: .
  - uid: Bliss.CSharp
    name: CSharp
    href: Bliss.CSharp.html
  spec.vb:
  - uid: Bliss
    name: Bliss
    href: Bliss.html
  - name: .
  - uid: Bliss.CSharp
    name: CSharp
    href: Bliss.CSharp.html
- uid: Bliss.CSharp.Effects.Effect.GraphicsDevice*
  commentId: Overload:Bliss.CSharp.Effects.Effect.GraphicsDevice
  href: Bliss.CSharp.Effects.Effect.html#Bliss_CSharp_Effects_Effect_GraphicsDevice
  name: GraphicsDevice
  nameWithType: Effect.GraphicsDevice
  fullName: Bliss.CSharp.Effects.Effect.GraphicsDevice
- uid: Veldrid.GraphicsDevice
  commentId: T:Veldrid.GraphicsDevice
  parent: Veldrid
  isExternal: true
  href: https://github.com/ppy/veldrid/blob/086790861c76f5dff99240b2ca2a363987549da3/src/Veldrid/GraphicsDevice.cs
  name: GraphicsDevice
  nameWithType: GraphicsDevice
  fullName: Veldrid.GraphicsDevice
- uid: Veldrid
  commentId: N:Veldrid
  isExternal: true
  name: Veldrid
  nameWithType: Veldrid
  fullName: Veldrid
- uid: System.ValueTuple{Veldrid.Shader,Veldrid.Shader}
  commentId: T:System.ValueTuple{Veldrid.Shader,Veldrid.Shader}
  parent: System
  definition: System.ValueTuple`2
  href: https://github.com/ppy/veldrid/blob/086790861c76f5dff99240b2ca2a363987549da3/src/Veldrid/Shader.cs
  name: (Shader VertShader, Shader FragShader)
  nameWithType: (Shader VertShader, Shader FragShader)
  fullName: (Veldrid.Shader VertShader, Veldrid.Shader FragShader)
  nameWithType.vb: (VertShader As Shader, FragShader As Shader)
  fullName.vb: (VertShader As Veldrid.Shader, FragShader As Veldrid.Shader)
  name.vb: (VertShader As Shader, FragShader As Shader)
  spec.csharp:
  - name: (
  - uid: Veldrid.Shader
    name: Shader
    isExternal: true
    href: https://github.com/ppy/veldrid/blob/086790861c76f5dff99240b2ca2a363987549da3/src/Veldrid/Shader.cs
  - name: " "
  - uid: System.ValueTuple{Veldrid.Shader,Veldrid.Shader}.VertShader
    name: VertShader
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-veldrid.shader,veldrid.shader-.vertshader
  - name: ','
  - name: " "
  - uid: Veldrid.Shader
    name: Shader
    isExternal: true
    href: https://github.com/ppy/veldrid/blob/086790861c76f5dff99240b2ca2a363987549da3/src/Veldrid/Shader.cs
  - name: " "
  - uid: System.ValueTuple{Veldrid.Shader,Veldrid.Shader}.FragShader
    name: FragShader
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-veldrid.shader,veldrid.shader-.fragshader
  - name: )
  spec.vb:
  - name: (
  - uid: System.ValueTuple{Veldrid.Shader,Veldrid.Shader}.VertShader
    name: VertShader
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-veldrid.shader,veldrid.shader-.vertshader
  - name: " "
  - name: As
  - name: " "
  - uid: Veldrid.Shader
    name: Shader
    isExternal: true
    href: https://github.com/ppy/veldrid/blob/086790861c76f5dff99240b2ca2a363987549da3/src/Veldrid/Shader.cs
  - name: ','
  - name: " "
  - uid: System.ValueTuple{Veldrid.Shader,Veldrid.Shader}.FragShader
    name: FragShader
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-veldrid.shader,veldrid.shader-.fragshader
  - name: " "
  - name: As
  - name: " "
  - uid: Veldrid.Shader
    name: Shader
    isExternal: true
    href: https://github.com/ppy/veldrid/blob/086790861c76f5dff99240b2ca2a363987549da3/src/Veldrid/Shader.cs
  - name: )
- uid: System.ValueTuple`2
  commentId: T:System.ValueTuple`2
  name: (T1, T2)
  nameWithType: (T1, T2)
  fullName: (T1, T2)
  spec.csharp:
  - name: (
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
  spec.vb:
  - name: (
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
- uid: Veldrid.VertexLayoutDescription
  commentId: T:Veldrid.VertexLayoutDescription
  parent: Veldrid
  isExternal: true
  href: https://github.com/ppy/veldrid/blob/086790861c76f5dff99240b2ca2a363987549da3/src/Veldrid/VertexLayoutDescription.cs
  name: VertexLayoutDescription
  nameWithType: VertexLayoutDescription
  fullName: Veldrid.VertexLayoutDescription
- uid: Veldrid.ShaderSetDescription
  commentId: T:Veldrid.ShaderSetDescription
  parent: Veldrid
  isExternal: true
  href: https://github.com/ppy/veldrid/blob/086790861c76f5dff99240b2ca2a363987549da3/src/Veldrid/ShaderSetDescription.cs
  name: ShaderSetDescription
  nameWithType: ShaderSetDescription
  fullName: Veldrid.ShaderSetDescription
- uid: Bliss.CSharp.Effects.Effect
  commentId: T:Bliss.CSharp.Effects.Effect
  parent: Bliss.CSharp.Effects
  href: Bliss.CSharp.Effects.Effect.html
  name: Effect
  nameWithType: Effect
  fullName: Bliss.CSharp.Effects.Effect
- uid: Bliss.CSharp.Effects.Effect.GraphicsDevice
  commentId: P:Bliss.CSharp.Effects.Effect.GraphicsDevice
  href: Bliss.CSharp.Effects.Effect.html#Bliss_CSharp_Effects_Effect_GraphicsDevice
  name: GraphicsDevice
  nameWithType: Effect.GraphicsDevice
  fullName: Bliss.CSharp.Effects.Effect.GraphicsDevice
- uid: Bliss.CSharp.Effects.Effect.#ctor*
  commentId: Overload:Bliss.CSharp.Effects.Effect.#ctor
  href: Bliss.CSharp.Effects.Effect.html#Bliss_CSharp_Effects_Effect__ctor_Veldrid_GraphicsDevice_Veldrid_VertexLayoutDescription_System_String_System_String_Veldrid_SpecializationConstant___
  name: Effect
  nameWithType: Effect.Effect
  fullName: Bliss.CSharp.Effects.Effect.Effect
  nameWithType.vb: Effect.New
  fullName.vb: Bliss.CSharp.Effects.Effect.New
  name.vb: New
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Veldrid.SpecializationConstant[]
  isExternal: true
  href: https://github.com/ppy/veldrid/blob/086790861c76f5dff99240b2ca2a363987549da3/src/Veldrid/SpecializationConstant.cs
  name: SpecializationConstant[]
  nameWithType: SpecializationConstant[]
  fullName: Veldrid.SpecializationConstant[]
  nameWithType.vb: SpecializationConstant()
  fullName.vb: Veldrid.SpecializationConstant()
  name.vb: SpecializationConstant()
  spec.csharp:
  - uid: Veldrid.SpecializationConstant
    name: SpecializationConstant
    isExternal: true
    href: https://github.com/ppy/veldrid/blob/086790861c76f5dff99240b2ca2a363987549da3/src/Veldrid/SpecializationConstant.cs
  - name: '['
  - name: ']'
  spec.vb:
  - uid: Veldrid.SpecializationConstant
    name: SpecializationConstant
    isExternal: true
    href: https://github.com/ppy/veldrid/blob/086790861c76f5dff99240b2ca2a363987549da3/src/Veldrid/SpecializationConstant.cs
  - name: (
  - name: )
- uid: System.Byte[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.byte
  name: byte[]
  nameWithType: byte[]
  fullName: byte[]
  nameWithType.vb: Byte()
  fullName.vb: Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: (
  - name: )
- uid: Bliss.CSharp.Effects.Effect.LoadBytecode*
  commentId: Overload:Bliss.CSharp.Effects.Effect.LoadBytecode
  href: Bliss.CSharp.Effects.Effect.html#Bliss_CSharp_Effects_Effect_LoadBytecode_System_String_
  name: LoadBytecode
  nameWithType: Effect.LoadBytecode
  fullName: Bliss.CSharp.Effects.Effect.LoadBytecode
- uid: Bliss.CSharp.Effects.Effect.GetBufferLayoutKeys*
  commentId: Overload:Bliss.CSharp.Effects.Effect.GetBufferLayoutKeys
  href: Bliss.CSharp.Effects.Effect.html#Bliss_CSharp_Effects_Effect_GetBufferLayoutKeys
  name: GetBufferLayoutKeys
  nameWithType: Effect.GetBufferLayoutKeys
  fullName: Bliss.CSharp.Effects.Effect.GetBufferLayoutKeys
- uid: System.Collections.Generic.IEnumerable{System.String}
  commentId: T:System.Collections.Generic.IEnumerable{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<string>
  nameWithType: IEnumerable<string>
  fullName: System.Collections.Generic.IEnumerable<string>
  nameWithType.vb: IEnumerable(Of String)
  fullName.vb: System.Collections.Generic.IEnumerable(Of String)
  name.vb: IEnumerable(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: Bliss.CSharp.Graphics.Pipelines.Buffers.SimpleBufferLayout
  commentId: T:Bliss.CSharp.Graphics.Pipelines.Buffers.SimpleBufferLayout
  parent: Bliss.CSharp.Graphics.Pipelines.Buffers
  href: Bliss.CSharp.Graphics.Pipelines.Buffers.SimpleBufferLayout.html
  name: SimpleBufferLayout
  nameWithType: SimpleBufferLayout
  fullName: Bliss.CSharp.Graphics.Pipelines.Buffers.SimpleBufferLayout
- uid: Bliss.CSharp.Effects.Effect.GetBufferLayouts*
  commentId: Overload:Bliss.CSharp.Effects.Effect.GetBufferLayouts
  href: Bliss.CSharp.Effects.Effect.html#Bliss_CSharp_Effects_Effect_GetBufferLayouts
  name: GetBufferLayouts
  nameWithType: Effect.GetBufferLayouts
  fullName: Bliss.CSharp.Effects.Effect.GetBufferLayouts
- uid: System.Collections.Generic.IEnumerable{Bliss.CSharp.Graphics.Pipelines.Buffers.SimpleBufferLayout}
  commentId: T:System.Collections.Generic.IEnumerable{Bliss.CSharp.Graphics.Pipelines.Buffers.SimpleBufferLayout}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<SimpleBufferLayout>
  nameWithType: IEnumerable<SimpleBufferLayout>
  fullName: System.Collections.Generic.IEnumerable<Bliss.CSharp.Graphics.Pipelines.Buffers.SimpleBufferLayout>
  nameWithType.vb: IEnumerable(Of SimpleBufferLayout)
  fullName.vb: System.Collections.Generic.IEnumerable(Of Bliss.CSharp.Graphics.Pipelines.Buffers.SimpleBufferLayout)
  name.vb: IEnumerable(Of SimpleBufferLayout)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: Bliss.CSharp.Graphics.Pipelines.Buffers.SimpleBufferLayout
    name: SimpleBufferLayout
    href: Bliss.CSharp.Graphics.Pipelines.Buffers.SimpleBufferLayout.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: Bliss.CSharp.Graphics.Pipelines.Buffers.SimpleBufferLayout
    name: SimpleBufferLayout
    href: Bliss.CSharp.Graphics.Pipelines.Buffers.SimpleBufferLayout.html
  - name: )
- uid: Bliss.CSharp.Graphics.Pipelines.Buffers
  commentId: N:Bliss.CSharp.Graphics.Pipelines.Buffers
  href: Bliss.html
  name: Bliss.CSharp.Graphics.Pipelines.Buffers
  nameWithType: Bliss.CSharp.Graphics.Pipelines.Buffers
  fullName: Bliss.CSharp.Graphics.Pipelines.Buffers
  spec.csharp:
  - uid: Bliss
    name: Bliss
    href: Bliss.html
  - name: .
  - uid: Bliss.CSharp
    name: CSharp
    href: Bliss.CSharp.html
  - name: .
  - uid: Bliss.CSharp.Graphics
    name: Graphics
    href: Bliss.CSharp.Graphics.html
  - name: .
  - uid: Bliss.CSharp.Graphics.Pipelines
    name: Pipelines
    href: Bliss.CSharp.Graphics.Pipelines.html
  - name: .
  - uid: Bliss.CSharp.Graphics.Pipelines.Buffers
    name: Buffers
    href: Bliss.CSharp.Graphics.Pipelines.Buffers.html
  spec.vb:
  - uid: Bliss
    name: Bliss
    href: Bliss.html
  - name: .
  - uid: Bliss.CSharp
    name: CSharp
    href: Bliss.CSharp.html
  - name: .
  - uid: Bliss.CSharp.Graphics
    name: Graphics
    href: Bliss.CSharp.Graphics.html
  - name: .
  - uid: Bliss.CSharp.Graphics.Pipelines
    name: Pipelines
    href: Bliss.CSharp.Graphics.Pipelines.html
  - name: .
  - uid: Bliss.CSharp.Graphics.Pipelines.Buffers
    name: Buffers
    href: Bliss.CSharp.Graphics.Pipelines.Buffers.html
- uid: Bliss.CSharp.Effects.Effect.GetBufferLayout*
  commentId: Overload:Bliss.CSharp.Effects.Effect.GetBufferLayout
  href: Bliss.CSharp.Effects.Effect.html#Bliss_CSharp_Effects_Effect_GetBufferLayout_System_String_
  name: GetBufferLayout
  nameWithType: Effect.GetBufferLayout
  fullName: Bliss.CSharp.Effects.Effect.GetBufferLayout
- uid: System.Collections.Generic.KeyNotFoundException
  commentId: T:System.Collections.Generic.KeyNotFoundException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.keynotfoundexception
  name: KeyNotFoundException
  nameWithType: KeyNotFoundException
  fullName: System.Collections.Generic.KeyNotFoundException
- uid: Bliss.CSharp.Effects.Effect.GetBufferLayoutSlot*
  commentId: Overload:Bliss.CSharp.Effects.Effect.GetBufferLayoutSlot
  href: Bliss.CSharp.Effects.Effect.html#Bliss_CSharp_Effects_Effect_GetBufferLayoutSlot_System_String_
  name: GetBufferLayoutSlot
  nameWithType: Effect.GetBufferLayoutSlot
  fullName: Bliss.CSharp.Effects.Effect.GetBufferLayoutSlot
- uid: System.UInt32
  commentId: T:System.UInt32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.uint32
  name: uint
  nameWithType: uint
  fullName: uint
  nameWithType.vb: UInteger
  fullName.vb: UInteger
  name.vb: UInteger
- uid: Bliss.CSharp.Effects.Effect.AddBufferLayout*
  commentId: Overload:Bliss.CSharp.Effects.Effect.AddBufferLayout
  href: Bliss.CSharp.Effects.Effect.html#Bliss_CSharp_Effects_Effect_AddBufferLayout_Bliss_CSharp_Graphics_Pipelines_Buffers_SimpleBufferLayout_
  name: AddBufferLayout
  nameWithType: Effect.AddBufferLayout
  fullName: Bliss.CSharp.Effects.Effect.AddBufferLayout
- uid: Bliss.CSharp.Effects.Effect.GetTextureLayoutKeys*
  commentId: Overload:Bliss.CSharp.Effects.Effect.GetTextureLayoutKeys
  href: Bliss.CSharp.Effects.Effect.html#Bliss_CSharp_Effects_Effect_GetTextureLayoutKeys
  name: GetTextureLayoutKeys
  nameWithType: Effect.GetTextureLayoutKeys
  fullName: Bliss.CSharp.Effects.Effect.GetTextureLayoutKeys
- uid: Bliss.CSharp.Graphics.Pipelines.Textures.SimpleTextureLayout
  commentId: T:Bliss.CSharp.Graphics.Pipelines.Textures.SimpleTextureLayout
  parent: Bliss.CSharp.Graphics.Pipelines.Textures
  href: Bliss.CSharp.Graphics.Pipelines.Textures.SimpleTextureLayout.html
  name: SimpleTextureLayout
  nameWithType: SimpleTextureLayout
  fullName: Bliss.CSharp.Graphics.Pipelines.Textures.SimpleTextureLayout
- uid: Bliss.CSharp.Effects.Effect.GetTextureLayouts*
  commentId: Overload:Bliss.CSharp.Effects.Effect.GetTextureLayouts
  href: Bliss.CSharp.Effects.Effect.html#Bliss_CSharp_Effects_Effect_GetTextureLayouts
  name: GetTextureLayouts
  nameWithType: Effect.GetTextureLayouts
  fullName: Bliss.CSharp.Effects.Effect.GetTextureLayouts
- uid: System.Collections.Generic.IEnumerable{Bliss.CSharp.Graphics.Pipelines.Textures.SimpleTextureLayout}
  commentId: T:System.Collections.Generic.IEnumerable{Bliss.CSharp.Graphics.Pipelines.Textures.SimpleTextureLayout}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<SimpleTextureLayout>
  nameWithType: IEnumerable<SimpleTextureLayout>
  fullName: System.Collections.Generic.IEnumerable<Bliss.CSharp.Graphics.Pipelines.Textures.SimpleTextureLayout>
  nameWithType.vb: IEnumerable(Of SimpleTextureLayout)
  fullName.vb: System.Collections.Generic.IEnumerable(Of Bliss.CSharp.Graphics.Pipelines.Textures.SimpleTextureLayout)
  name.vb: IEnumerable(Of SimpleTextureLayout)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: Bliss.CSharp.Graphics.Pipelines.Textures.SimpleTextureLayout
    name: SimpleTextureLayout
    href: Bliss.CSharp.Graphics.Pipelines.Textures.SimpleTextureLayout.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: Bliss.CSharp.Graphics.Pipelines.Textures.SimpleTextureLayout
    name: SimpleTextureLayout
    href: Bliss.CSharp.Graphics.Pipelines.Textures.SimpleTextureLayout.html
  - name: )
- uid: Bliss.CSharp.Graphics.Pipelines.Textures
  commentId: N:Bliss.CSharp.Graphics.Pipelines.Textures
  href: Bliss.html
  name: Bliss.CSharp.Graphics.Pipelines.Textures
  nameWithType: Bliss.CSharp.Graphics.Pipelines.Textures
  fullName: Bliss.CSharp.Graphics.Pipelines.Textures
  spec.csharp:
  - uid: Bliss
    name: Bliss
    href: Bliss.html
  - name: .
  - uid: Bliss.CSharp
    name: CSharp
    href: Bliss.CSharp.html
  - name: .
  - uid: Bliss.CSharp.Graphics
    name: Graphics
    href: Bliss.CSharp.Graphics.html
  - name: .
  - uid: Bliss.CSharp.Graphics.Pipelines
    name: Pipelines
    href: Bliss.CSharp.Graphics.Pipelines.html
  - name: .
  - uid: Bliss.CSharp.Graphics.Pipelines.Textures
    name: Textures
    href: Bliss.CSharp.Graphics.Pipelines.Textures.html
  spec.vb:
  - uid: Bliss
    name: Bliss
    href: Bliss.html
  - name: .
  - uid: Bliss.CSharp
    name: CSharp
    href: Bliss.CSharp.html
  - name: .
  - uid: Bliss.CSharp.Graphics
    name: Graphics
    href: Bliss.CSharp.Graphics.html
  - name: .
  - uid: Bliss.CSharp.Graphics.Pipelines
    name: Pipelines
    href: Bliss.CSharp.Graphics.Pipelines.html
  - name: .
  - uid: Bliss.CSharp.Graphics.Pipelines.Textures
    name: Textures
    href: Bliss.CSharp.Graphics.Pipelines.Textures.html
- uid: Bliss.CSharp.Effects.Effect.GetTextureLayout*
  commentId: Overload:Bliss.CSharp.Effects.Effect.GetTextureLayout
  href: Bliss.CSharp.Effects.Effect.html#Bliss_CSharp_Effects_Effect_GetTextureLayout_System_String_
  name: GetTextureLayout
  nameWithType: Effect.GetTextureLayout
  fullName: Bliss.CSharp.Effects.Effect.GetTextureLayout
- uid: Bliss.CSharp.Effects.Effect.GetTextureLayoutSlot*
  commentId: Overload:Bliss.CSharp.Effects.Effect.GetTextureLayoutSlot
  href: Bliss.CSharp.Effects.Effect.html#Bliss_CSharp_Effects_Effect_GetTextureLayoutSlot_System_String_
  name: GetTextureLayoutSlot
  nameWithType: Effect.GetTextureLayoutSlot
  fullName: Bliss.CSharp.Effects.Effect.GetTextureLayoutSlot
- uid: Bliss.CSharp.Effects.Effect.AddTextureLayout*
  commentId: Overload:Bliss.CSharp.Effects.Effect.AddTextureLayout
  href: Bliss.CSharp.Effects.Effect.html#Bliss_CSharp_Effects_Effect_AddTextureLayout_Bliss_CSharp_Graphics_Pipelines_Textures_SimpleTextureLayout_
  name: AddTextureLayout
  nameWithType: Effect.AddTextureLayout
  fullName: Bliss.CSharp.Effects.Effect.AddTextureLayout
- uid: Bliss.CSharp.Graphics.Pipelines.SimplePipeline
  commentId: T:Bliss.CSharp.Graphics.Pipelines.SimplePipeline
  parent: Bliss.CSharp.Graphics.Pipelines
  href: Bliss.CSharp.Graphics.Pipelines.SimplePipeline.html
  name: SimplePipeline
  nameWithType: SimplePipeline
  fullName: Bliss.CSharp.Graphics.Pipelines.SimplePipeline
- uid: Bliss.CSharp.Effects.Effect.GetPipeline*
  commentId: Overload:Bliss.CSharp.Effects.Effect.GetPipeline
  href: Bliss.CSharp.Effects.Effect.html#Bliss_CSharp_Effects_Effect_GetPipeline_Bliss_CSharp_Graphics_Pipelines_SimplePipelineDescription_
  name: GetPipeline
  nameWithType: Effect.GetPipeline
  fullName: Bliss.CSharp.Effects.Effect.GetPipeline
- uid: Bliss.CSharp.Graphics.Pipelines.SimplePipelineDescription
  commentId: T:Bliss.CSharp.Graphics.Pipelines.SimplePipelineDescription
  parent: Bliss.CSharp.Graphics.Pipelines
  href: Bliss.CSharp.Graphics.Pipelines.SimplePipelineDescription.html
  name: SimplePipelineDescription
  nameWithType: SimplePipelineDescription
  fullName: Bliss.CSharp.Graphics.Pipelines.SimplePipelineDescription
- uid: Bliss.CSharp.Graphics.Pipelines
  commentId: N:Bliss.CSharp.Graphics.Pipelines
  href: Bliss.html
  name: Bliss.CSharp.Graphics.Pipelines
  nameWithType: Bliss.CSharp.Graphics.Pipelines
  fullName: Bliss.CSharp.Graphics.Pipelines
  spec.csharp:
  - uid: Bliss
    name: Bliss
    href: Bliss.html
  - name: .
  - uid: Bliss.CSharp
    name: CSharp
    href: Bliss.CSharp.html
  - name: .
  - uid: Bliss.CSharp.Graphics
    name: Graphics
    href: Bliss.CSharp.Graphics.html
  - name: .
  - uid: Bliss.CSharp.Graphics.Pipelines
    name: Pipelines
    href: Bliss.CSharp.Graphics.Pipelines.html
  spec.vb:
  - uid: Bliss
    name: Bliss
    href: Bliss.html
  - name: .
  - uid: Bliss.CSharp
    name: CSharp
    href: Bliss.CSharp.html
  - name: .
  - uid: Bliss.CSharp.Graphics
    name: Graphics
    href: Bliss.CSharp.Graphics.html
  - name: .
  - uid: Bliss.CSharp.Graphics.Pipelines
    name: Pipelines
    href: Bliss.CSharp.Graphics.Pipelines.html
- uid: Bliss.CSharp.Effects.Effect.Apply*
  commentId: Overload:Bliss.CSharp.Effects.Effect.Apply
  href: Bliss.CSharp.Effects.Effect.html#Bliss_CSharp_Effects_Effect_Apply_Veldrid_CommandList_Bliss_CSharp_Materials_Material_
  name: Apply
  nameWithType: Effect.Apply
  fullName: Bliss.CSharp.Effects.Effect.Apply
- uid: Veldrid.CommandList
  commentId: T:Veldrid.CommandList
  parent: Veldrid
  isExternal: true
  href: https://github.com/ppy/veldrid/blob/086790861c76f5dff99240b2ca2a363987549da3/src/Veldrid/CommandList.cs
  name: CommandList
  nameWithType: CommandList
  fullName: Veldrid.CommandList
- uid: Bliss.CSharp.Materials.Material
  commentId: T:Bliss.CSharp.Materials.Material
  parent: Bliss.CSharp.Materials
  href: Bliss.CSharp.Materials.Material.html
  name: Material
  nameWithType: Material
  fullName: Bliss.CSharp.Materials.Material
- uid: Bliss.CSharp.Materials
  commentId: N:Bliss.CSharp.Materials
  href: Bliss.html
  name: Bliss.CSharp.Materials
  nameWithType: Bliss.CSharp.Materials
  fullName: Bliss.CSharp.Materials
  spec.csharp:
  - uid: Bliss
    name: Bliss
    href: Bliss.html
  - name: .
  - uid: Bliss.CSharp
    name: CSharp
    href: Bliss.CSharp.html
  - name: .
  - uid: Bliss.CSharp.Materials
    name: Materials
    href: Bliss.CSharp.Materials.html
  spec.vb:
  - uid: Bliss
    name: Bliss
    href: Bliss.html
  - name: .
  - uid: Bliss.CSharp
    name: CSharp
    href: Bliss.CSharp.html
  - name: .
  - uid: Bliss.CSharp.Materials
    name: Materials
    href: Bliss.CSharp.Materials.html
- uid: Bliss.CSharp.Disposable.Dispose(System.Boolean)
  commentId: M:Bliss.CSharp.Disposable.Dispose(System.Boolean)
  parent: Bliss.CSharp.Disposable
  isExternal: true
  href: Bliss.CSharp.Disposable.html#Bliss_CSharp_Disposable_Dispose_System_Boolean_
  name: Dispose(bool)
  nameWithType: Disposable.Dispose(bool)
  fullName: Bliss.CSharp.Disposable.Dispose(bool)
  nameWithType.vb: Disposable.Dispose(Boolean)
  fullName.vb: Bliss.CSharp.Disposable.Dispose(Boolean)
  name.vb: Dispose(Boolean)
  spec.csharp:
  - uid: Bliss.CSharp.Disposable.Dispose(System.Boolean)
    name: Dispose
    href: Bliss.CSharp.Disposable.html#Bliss_CSharp_Disposable_Dispose_System_Boolean_
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: Bliss.CSharp.Disposable.Dispose(System.Boolean)
    name: Dispose
    href: Bliss.CSharp.Disposable.html#Bliss_CSharp_Disposable_Dispose_System_Boolean_
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Bliss.CSharp.Effects.Effect.Dispose*
  commentId: Overload:Bliss.CSharp.Effects.Effect.Dispose
  href: Bliss.CSharp.Effects.Effect.html#Bliss_CSharp_Effects_Effect_Dispose_System_Boolean_
  name: Dispose
  nameWithType: Effect.Dispose
  fullName: Bliss.CSharp.Effects.Effect.Dispose
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
