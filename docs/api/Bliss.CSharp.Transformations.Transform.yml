### YamlMime:ManagedReference
items:
- uid: Bliss.CSharp.Transformations.Transform
  commentId: T:Bliss.CSharp.Transformations.Transform
  id: Transform
  parent: Bliss.CSharp.Transformations
  children:
  - Bliss.CSharp.Transformations.Transform.#ctor
  - Bliss.CSharp.Transformations.Transform.Equals(Bliss.CSharp.Transformations.Transform)
  - Bliss.CSharp.Transformations.Transform.Equals(System.Object)
  - Bliss.CSharp.Transformations.Transform.Forward
  - Bliss.CSharp.Transformations.Transform.GetHashCode
  - Bliss.CSharp.Transformations.Transform.GetTransform
  - Bliss.CSharp.Transformations.Transform.OnUpdate
  - Bliss.CSharp.Transformations.Transform.Right
  - Bliss.CSharp.Transformations.Transform.Rotation
  - Bliss.CSharp.Transformations.Transform.Scale
  - Bliss.CSharp.Transformations.Transform.ToString
  - Bliss.CSharp.Transformations.Transform.Translation
  - Bliss.CSharp.Transformations.Transform.Up
  - Bliss.CSharp.Transformations.Transform.op_Equality(Bliss.CSharp.Transformations.Transform,Bliss.CSharp.Transformations.Transform)
  - Bliss.CSharp.Transformations.Transform.op_Inequality(Bliss.CSharp.Transformations.Transform,Bliss.CSharp.Transformations.Transform)
  langs:
  - csharp
  - vb
  name: Transform
  nameWithType: Transform
  fullName: Bliss.CSharp.Transformations.Transform
  type: Struct
  source:
    remote:
      path: src/Bliss/CSharp/Transformations/Transform.cs
      branch: main
      repo: https://github.com/MrScautHD/Bliss.git
    id: Transform
    path: ../src/Bliss/CSharp/Transformations/Transform.cs
    startLine: 4
  assemblies:
  - Bliss
  namespace: Bliss.CSharp.Transformations
  syntax:
    content: 'public struct Transform : IEquatable<Transform>'
    content.vb: Public Structure Transform Implements IEquatable(Of Transform)
  implements:
  - System.IEquatable{Bliss.CSharp.Transformations.Transform}
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
- uid: Bliss.CSharp.Transformations.Transform.Forward
  commentId: P:Bliss.CSharp.Transformations.Transform.Forward
  id: Forward
  parent: Bliss.CSharp.Transformations.Transform
  langs:
  - csharp
  - vb
  name: Forward
  nameWithType: Transform.Forward
  fullName: Bliss.CSharp.Transformations.Transform.Forward
  type: Property
  source:
    remote:
      path: src/Bliss/CSharp/Transformations/Transform.cs
      branch: main
      repo: https://github.com/MrScautHD/Bliss.git
    id: Forward
    path: ../src/Bliss/CSharp/Transformations/Transform.cs
    startLine: 9
  assemblies:
  - Bliss
  namespace: Bliss.CSharp.Transformations
  summary: The forward Vector.
  example: []
  syntax:
    content: public Vector3 Forward { get; }
    parameters: []
    return:
      type: System.Numerics.Vector3
    content.vb: Public ReadOnly Property Forward As Vector3
  overload: Bliss.CSharp.Transformations.Transform.Forward*
- uid: Bliss.CSharp.Transformations.Transform.Up
  commentId: P:Bliss.CSharp.Transformations.Transform.Up
  id: Up
  parent: Bliss.CSharp.Transformations.Transform
  langs:
  - csharp
  - vb
  name: Up
  nameWithType: Transform.Up
  fullName: Bliss.CSharp.Transformations.Transform.Up
  type: Property
  source:
    remote:
      path: src/Bliss/CSharp/Transformations/Transform.cs
      branch: main
      repo: https://github.com/MrScautHD/Bliss.git
    id: Up
    path: ../src/Bliss/CSharp/Transformations/Transform.cs
    startLine: 14
  assemblies:
  - Bliss
  namespace: Bliss.CSharp.Transformations
  summary: The up vector.
  example: []
  syntax:
    content: public Vector3 Up { get; }
    parameters: []
    return:
      type: System.Numerics.Vector3
    content.vb: Public ReadOnly Property Up As Vector3
  overload: Bliss.CSharp.Transformations.Transform.Up*
- uid: Bliss.CSharp.Transformations.Transform.Right
  commentId: P:Bliss.CSharp.Transformations.Transform.Right
  id: Right
  parent: Bliss.CSharp.Transformations.Transform
  langs:
  - csharp
  - vb
  name: Right
  nameWithType: Transform.Right
  fullName: Bliss.CSharp.Transformations.Transform.Right
  type: Property
  source:
    remote:
      path: src/Bliss/CSharp/Transformations/Transform.cs
      branch: main
      repo: https://github.com/MrScautHD/Bliss.git
    id: Right
    path: ../src/Bliss/CSharp/Transformations/Transform.cs
    startLine: 19
  assemblies:
  - Bliss
  namespace: Bliss.CSharp.Transformations
  summary: The right vector.
  example: []
  syntax:
    content: public Vector3 Right { get; }
    parameters: []
    return:
      type: System.Numerics.Vector3
    content.vb: Public ReadOnly Property Right As Vector3
  overload: Bliss.CSharp.Transformations.Transform.Right*
- uid: Bliss.CSharp.Transformations.Transform.OnUpdate
  commentId: E:Bliss.CSharp.Transformations.Transform.OnUpdate
  id: OnUpdate
  parent: Bliss.CSharp.Transformations.Transform
  langs:
  - csharp
  - vb
  name: OnUpdate
  nameWithType: Transform.OnUpdate
  fullName: Bliss.CSharp.Transformations.Transform.OnUpdate
  type: Event
  source:
    remote:
      path: src/Bliss/CSharp/Transformations/Transform.cs
      branch: main
      repo: https://github.com/MrScautHD/Bliss.git
    id: OnUpdate
    path: ../src/Bliss/CSharp/Transformations/Transform.cs
    startLine: 24
  assemblies:
  - Bliss
  namespace: Bliss.CSharp.Transformations
  summary: Event triggered whenever the transformation is updated (translation, rotation, or scale changes).
  example: []
  syntax:
    content: public event Action<Transform>? OnUpdate
    return:
      type: System.Action{Bliss.CSharp.Transformations.Transform}
    content.vb: Public Event OnUpdate As Action(Of Transform)
- uid: Bliss.CSharp.Transformations.Transform.#ctor
  commentId: M:Bliss.CSharp.Transformations.Transform.#ctor
  id: '#ctor'
  parent: Bliss.CSharp.Transformations.Transform
  langs:
  - csharp
  - vb
  name: Transform()
  nameWithType: Transform.Transform()
  fullName: Bliss.CSharp.Transformations.Transform.Transform()
  type: Constructor
  source:
    remote:
      path: src/Bliss/CSharp/Transformations/Transform.cs
      branch: main
      repo: https://github.com/MrScautHD/Bliss.git
    id: .ctor
    path: ../src/Bliss/CSharp/Transformations/Transform.cs
    startLine: 44
  assemblies:
  - Bliss
  namespace: Bliss.CSharp.Transformations
  summary: Initializes a new instance of the <xref href="Bliss.CSharp.Transformations.Transform" data-throw-if-not-resolved="false"></xref> class with default values.
  example: []
  syntax:
    content: public Transform()
    content.vb: Public Sub New()
  overload: Bliss.CSharp.Transformations.Transform.#ctor*
  nameWithType.vb: Transform.New()
  fullName.vb: Bliss.CSharp.Transformations.Transform.New()
  name.vb: New()
- uid: Bliss.CSharp.Transformations.Transform.Translation
  commentId: P:Bliss.CSharp.Transformations.Transform.Translation
  id: Translation
  parent: Bliss.CSharp.Transformations.Transform
  langs:
  - csharp
  - vb
  name: Translation
  nameWithType: Transform.Translation
  fullName: Bliss.CSharp.Transformations.Transform.Translation
  type: Property
  source:
    remote:
      path: src/Bliss/CSharp/Transformations/Transform.cs
      branch: main
      repo: https://github.com/MrScautHD/Bliss.git
    id: Translation
    path: ../src/Bliss/CSharp/Transformations/Transform.cs
    startLine: 54
  assemblies:
  - Bliss
  namespace: Bliss.CSharp.Transformations
  summary: >-
    Gets or sets the translation (position) component of the transform.

    Triggers the <xref href="Bliss.CSharp.Transformations.Transform.OnUpdate" data-throw-if-not-resolved="false"></xref> event when changed.
  example: []
  syntax:
    content: public Vector3 Translation { get; set; }
    parameters: []
    return:
      type: System.Numerics.Vector3
    content.vb: Public Property Translation As Vector3
  overload: Bliss.CSharp.Transformations.Transform.Translation*
- uid: Bliss.CSharp.Transformations.Transform.Rotation
  commentId: P:Bliss.CSharp.Transformations.Transform.Rotation
  id: Rotation
  parent: Bliss.CSharp.Transformations.Transform
  langs:
  - csharp
  - vb
  name: Rotation
  nameWithType: Transform.Rotation
  fullName: Bliss.CSharp.Transformations.Transform.Rotation
  type: Property
  source:
    remote:
      path: src/Bliss/CSharp/Transformations/Transform.cs
      branch: main
      repo: https://github.com/MrScautHD/Bliss.git
    id: Rotation
    path: ../src/Bliss/CSharp/Transformations/Transform.cs
    startLine: 66
  assemblies:
  - Bliss
  namespace: Bliss.CSharp.Transformations
  summary: >-
    Gets or sets the rotation component of the transform as a quaternion.

    Triggers the <xref href="Bliss.CSharp.Transformations.Transform.OnUpdate" data-throw-if-not-resolved="false"></xref> event when changed.
  example: []
  syntax:
    content: public Quaternion Rotation { get; set; }
    parameters: []
    return:
      type: System.Numerics.Quaternion
    content.vb: Public Property Rotation As Quaternion
  overload: Bliss.CSharp.Transformations.Transform.Rotation*
- uid: Bliss.CSharp.Transformations.Transform.Scale
  commentId: P:Bliss.CSharp.Transformations.Transform.Scale
  id: Scale
  parent: Bliss.CSharp.Transformations.Transform
  langs:
  - csharp
  - vb
  name: Scale
  nameWithType: Transform.Scale
  fullName: Bliss.CSharp.Transformations.Transform.Scale
  type: Property
  source:
    remote:
      path: src/Bliss/CSharp/Transformations/Transform.cs
      branch: main
      repo: https://github.com/MrScautHD/Bliss.git
    id: Scale
    path: ../src/Bliss/CSharp/Transformations/Transform.cs
    startLine: 78
  assemblies:
  - Bliss
  namespace: Bliss.CSharp.Transformations
  summary: >-
    Gets or sets the scale component of the transform.

    Triggers the <xref href="Bliss.CSharp.Transformations.Transform.OnUpdate" data-throw-if-not-resolved="false"></xref> event when changed.
  example: []
  syntax:
    content: public Vector3 Scale { get; set; }
    parameters: []
    return:
      type: System.Numerics.Vector3
    content.vb: Public Property Scale As Vector3
  overload: Bliss.CSharp.Transformations.Transform.Scale*
- uid: Bliss.CSharp.Transformations.Transform.op_Equality(Bliss.CSharp.Transformations.Transform,Bliss.CSharp.Transformations.Transform)
  commentId: M:Bliss.CSharp.Transformations.Transform.op_Equality(Bliss.CSharp.Transformations.Transform,Bliss.CSharp.Transformations.Transform)
  id: op_Equality(Bliss.CSharp.Transformations.Transform,Bliss.CSharp.Transformations.Transform)
  parent: Bliss.CSharp.Transformations.Transform
  langs:
  - csharp
  - vb
  name: operator ==(Transform, Transform)
  nameWithType: Transform.operator ==(Transform, Transform)
  fullName: Bliss.CSharp.Transformations.Transform.operator ==(Bliss.CSharp.Transformations.Transform, Bliss.CSharp.Transformations.Transform)
  type: Operator
  source:
    remote:
      path: src/Bliss/CSharp/Transformations/Transform.cs
      branch: main
      repo: https://github.com/MrScautHD/Bliss.git
    id: op_Equality
    path: ../src/Bliss/CSharp/Transformations/Transform.cs
    startLine: 92
  assemblies:
  - Bliss
  namespace: Bliss.CSharp.Transformations
  summary: Determines whether two instances of the <xref href="Bliss.CSharp.Transformations.Transform" data-throw-if-not-resolved="false"></xref> struct are equal.
  example: []
  syntax:
    content: public static bool operator ==(Transform left, Transform right)
    parameters:
    - id: left
      type: Bliss.CSharp.Transformations.Transform
      description: The first instance of <xref href="Bliss.CSharp.Transformations.Transform" data-throw-if-not-resolved="false"></xref> to compare.
    - id: right
      type: Bliss.CSharp.Transformations.Transform
      description: The second instance of <xref href="Bliss.CSharp.Transformations.Transform" data-throw-if-not-resolved="false"></xref> to compare.
    return:
      type: System.Boolean
      description: <code>true</code> if the two instances are equal; otherwise, <code>false</code>.
    content.vb: Public Shared Operator =(left As Transform, right As Transform) As Boolean
  overload: Bliss.CSharp.Transformations.Transform.op_Equality*
  nameWithType.vb: Transform.=(Transform, Transform)
  fullName.vb: Bliss.CSharp.Transformations.Transform.=(Bliss.CSharp.Transformations.Transform, Bliss.CSharp.Transformations.Transform)
  name.vb: =(Transform, Transform)
- uid: Bliss.CSharp.Transformations.Transform.op_Inequality(Bliss.CSharp.Transformations.Transform,Bliss.CSharp.Transformations.Transform)
  commentId: M:Bliss.CSharp.Transformations.Transform.op_Inequality(Bliss.CSharp.Transformations.Transform,Bliss.CSharp.Transformations.Transform)
  id: op_Inequality(Bliss.CSharp.Transformations.Transform,Bliss.CSharp.Transformations.Transform)
  parent: Bliss.CSharp.Transformations.Transform
  langs:
  - csharp
  - vb
  name: operator !=(Transform, Transform)
  nameWithType: Transform.operator !=(Transform, Transform)
  fullName: Bliss.CSharp.Transformations.Transform.operator !=(Bliss.CSharp.Transformations.Transform, Bliss.CSharp.Transformations.Transform)
  type: Operator
  source:
    remote:
      path: src/Bliss/CSharp/Transformations/Transform.cs
      branch: main
      repo: https://github.com/MrScautHD/Bliss.git
    id: op_Inequality
    path: ../src/Bliss/CSharp/Transformations/Transform.cs
    startLine: 100
  assemblies:
  - Bliss
  namespace: Bliss.CSharp.Transformations
  summary: Determines whether two instances of the <xref href="Bliss.CSharp.Transformations.Transform" data-throw-if-not-resolved="false"></xref> struct are not equal.
  example: []
  syntax:
    content: public static bool operator !=(Transform left, Transform right)
    parameters:
    - id: left
      type: Bliss.CSharp.Transformations.Transform
      description: The first instance of <xref href="Bliss.CSharp.Transformations.Transform" data-throw-if-not-resolved="false"></xref> to compare.
    - id: right
      type: Bliss.CSharp.Transformations.Transform
      description: The second instance of <xref href="Bliss.CSharp.Transformations.Transform" data-throw-if-not-resolved="false"></xref> to compare.
    return:
      type: System.Boolean
      description: <code>true</code> if the two instances are not equal; otherwise, <code>false</code>.
    content.vb: Public Shared Operator <>(left As Transform, right As Transform) As Boolean
  overload: Bliss.CSharp.Transformations.Transform.op_Inequality*
  nameWithType.vb: Transform.<>(Transform, Transform)
  fullName.vb: Bliss.CSharp.Transformations.Transform.<>(Bliss.CSharp.Transformations.Transform, Bliss.CSharp.Transformations.Transform)
  name.vb: <>(Transform, Transform)
- uid: Bliss.CSharp.Transformations.Transform.GetTransform
  commentId: M:Bliss.CSharp.Transformations.Transform.GetTransform
  id: GetTransform
  parent: Bliss.CSharp.Transformations.Transform
  langs:
  - csharp
  - vb
  name: GetTransform()
  nameWithType: Transform.GetTransform()
  fullName: Bliss.CSharp.Transformations.Transform.GetTransform()
  type: Method
  source:
    remote:
      path: src/Bliss/CSharp/Transformations/Transform.cs
      branch: main
      repo: https://github.com/MrScautHD/Bliss.git
    id: GetTransform
    path: ../src/Bliss/CSharp/Transformations/Transform.cs
    startLine: 106
  assemblies:
  - Bliss
  namespace: Bliss.CSharp.Transformations
  summary: Returns the transformation matrix for the current Transform object.
  example: []
  syntax:
    content: public Matrix4x4 GetTransform()
    return:
      type: System.Numerics.Matrix4x4
      description: The transformation matrix.
    content.vb: Public Function GetTransform() As Matrix4x4
  overload: Bliss.CSharp.Transformations.Transform.GetTransform*
- uid: Bliss.CSharp.Transformations.Transform.Equals(Bliss.CSharp.Transformations.Transform)
  commentId: M:Bliss.CSharp.Transformations.Transform.Equals(Bliss.CSharp.Transformations.Transform)
  id: Equals(Bliss.CSharp.Transformations.Transform)
  parent: Bliss.CSharp.Transformations.Transform
  langs:
  - csharp
  - vb
  name: Equals(Transform)
  nameWithType: Transform.Equals(Transform)
  fullName: Bliss.CSharp.Transformations.Transform.Equals(Bliss.CSharp.Transformations.Transform)
  type: Method
  source:
    remote:
      path: src/Bliss/CSharp/Transformations/Transform.cs
      branch: main
      repo: https://github.com/MrScautHD/Bliss.git
    id: Equals
    path: ../src/Bliss/CSharp/Transformations/Transform.cs
    startLine: 119
  assemblies:
  - Bliss
  namespace: Bliss.CSharp.Transformations
  summary: Determines whether the current instance is equal to another instance of the <xref href="Bliss.CSharp.Transformations.Transform" data-throw-if-not-resolved="false"></xref> struct.
  example: []
  syntax:
    content: public bool Equals(Transform other)
    parameters:
    - id: other
      type: Bliss.CSharp.Transformations.Transform
      description: The <xref href="Bliss.CSharp.Transformations.Transform" data-throw-if-not-resolved="false"></xref> to compare with the current instance.
    return:
      type: System.Boolean
      description: <code>true</code> if the current instance is equal to the specified <xref href="Bliss.CSharp.Transformations.Transform" data-throw-if-not-resolved="false"></xref>; otherwise, <code>false</code>.
    content.vb: Public Function Equals(other As Transform) As Boolean
  overload: Bliss.CSharp.Transformations.Transform.Equals*
  implements:
  - System.IEquatable{Bliss.CSharp.Transformations.Transform}.Equals(Bliss.CSharp.Transformations.Transform)
- uid: Bliss.CSharp.Transformations.Transform.Equals(System.Object)
  commentId: M:Bliss.CSharp.Transformations.Transform.Equals(System.Object)
  id: Equals(System.Object)
  parent: Bliss.CSharp.Transformations.Transform
  langs:
  - csharp
  - vb
  name: Equals(object?)
  nameWithType: Transform.Equals(object?)
  fullName: Bliss.CSharp.Transformations.Transform.Equals(object?)
  type: Method
  source:
    remote:
      path: src/Bliss/CSharp/Transformations/Transform.cs
      branch: main
      repo: https://github.com/MrScautHD/Bliss.git
    id: Equals
    path: ../src/Bliss/CSharp/Transformations/Transform.cs
    startLine: 130
  assemblies:
  - Bliss
  namespace: Bliss.CSharp.Transformations
  summary: Determines whether the specified object is equal to the current <xref href="Bliss.CSharp.Transformations.Transform" data-throw-if-not-resolved="false"></xref> instance.
  example: []
  syntax:
    content: public override bool Equals(object? obj)
    parameters:
    - id: obj
      type: System.Object
      description: The object to compare with the current <xref href="Bliss.CSharp.Transformations.Transform" data-throw-if-not-resolved="false"></xref>.
    return:
      type: System.Boolean
      description: <code>true</code> if the specified object is equal to the current <xref href="Bliss.CSharp.Transformations.Transform" data-throw-if-not-resolved="false"></xref>; otherwise, <code>false</code>.
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.ValueType.Equals(System.Object)
  overload: Bliss.CSharp.Transformations.Transform.Equals*
  nameWithType.vb: Transform.Equals(Object)
  fullName.vb: Bliss.CSharp.Transformations.Transform.Equals(Object)
  name.vb: Equals(Object)
- uid: Bliss.CSharp.Transformations.Transform.GetHashCode
  commentId: M:Bliss.CSharp.Transformations.Transform.GetHashCode
  id: GetHashCode
  parent: Bliss.CSharp.Transformations.Transform
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: Transform.GetHashCode()
  fullName: Bliss.CSharp.Transformations.Transform.GetHashCode()
  type: Method
  source:
    remote:
      path: src/Bliss/CSharp/Transformations/Transform.cs
      branch: main
      repo: https://github.com/MrScautHD/Bliss.git
    id: GetHashCode
    path: ../src/Bliss/CSharp/Transformations/Transform.cs
    startLine: 138
  assemblies:
  - Bliss
  namespace: Bliss.CSharp.Transformations
  summary: Returns the hash code for the current instance of the <xref href="Bliss.CSharp.Transformations.Transform" data-throw-if-not-resolved="false"></xref> struct.
  example: []
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
      description: An integer representing the hash code of the current <xref href="Bliss.CSharp.Transformations.Transform" data-throw-if-not-resolved="false"></xref> instance.
    content.vb: Public Overrides Function GetHashCode() As Integer
  overridden: System.ValueType.GetHashCode
  overload: Bliss.CSharp.Transformations.Transform.GetHashCode*
- uid: Bliss.CSharp.Transformations.Transform.ToString
  commentId: M:Bliss.CSharp.Transformations.Transform.ToString
  id: ToString
  parent: Bliss.CSharp.Transformations.Transform
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: Transform.ToString()
  fullName: Bliss.CSharp.Transformations.Transform.ToString()
  type: Method
  source:
    remote:
      path: src/Bliss/CSharp/Transformations/Transform.cs
      branch: main
      repo: https://github.com/MrScautHD/Bliss.git
    id: ToString
    path: ../src/Bliss/CSharp/Transformations/Transform.cs
    startLine: 146
  assemblies:
  - Bliss
  namespace: Bliss.CSharp.Transformations
  summary: Returns a string representation of the current Transform object.
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: A string that represents the values of Translation, Rotation, and Scale.
    content.vb: Public Overrides Function ToString() As String
  overridden: System.ValueType.ToString
  overload: Bliss.CSharp.Transformations.Transform.ToString*
references:
- uid: Bliss.CSharp.Transformations
  commentId: N:Bliss.CSharp.Transformations
  href: Bliss.html
  name: Bliss.CSharp.Transformations
  nameWithType: Bliss.CSharp.Transformations
  fullName: Bliss.CSharp.Transformations
  spec.csharp:
  - uid: Bliss
    name: Bliss
    href: Bliss.html
  - name: .
  - uid: Bliss.CSharp
    name: CSharp
    href: Bliss.CSharp.html
  - name: .
  - uid: Bliss.CSharp.Transformations
    name: Transformations
    href: Bliss.CSharp.Transformations.html
  spec.vb:
  - uid: Bliss
    name: Bliss
    href: Bliss.html
  - name: .
  - uid: Bliss.CSharp
    name: CSharp
    href: Bliss.CSharp.html
  - name: .
  - uid: Bliss.CSharp.Transformations
    name: Transformations
    href: Bliss.CSharp.Transformations.html
- uid: System.IEquatable{Bliss.CSharp.Transformations.Transform}
  commentId: T:System.IEquatable{Bliss.CSharp.Transformations.Transform}
  parent: System
  definition: System.IEquatable`1
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<Transform>
  nameWithType: IEquatable<Transform>
  fullName: System.IEquatable<Bliss.CSharp.Transformations.Transform>
  nameWithType.vb: IEquatable(Of Transform)
  fullName.vb: System.IEquatable(Of Bliss.CSharp.Transformations.Transform)
  name.vb: IEquatable(Of Transform)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - uid: Bliss.CSharp.Transformations.Transform
    name: Transform
    href: Bliss.CSharp.Transformations.Transform.html
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - uid: Bliss.CSharp.Transformations.Transform
    name: Transform
    href: Bliss.CSharp.Transformations.Transform.html
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Bliss.CSharp.Transformations.Transform.Forward*
  commentId: Overload:Bliss.CSharp.Transformations.Transform.Forward
  href: Bliss.CSharp.Transformations.Transform.html#Bliss_CSharp_Transformations_Transform_Forward
  name: Forward
  nameWithType: Transform.Forward
  fullName: Bliss.CSharp.Transformations.Transform.Forward
- uid: System.Numerics.Vector3
  commentId: T:System.Numerics.Vector3
  parent: System.Numerics
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.numerics.vector3
  name: Vector3
  nameWithType: Vector3
  fullName: System.Numerics.Vector3
- uid: System.Numerics
  commentId: N:System.Numerics
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Numerics
  nameWithType: System.Numerics
  fullName: System.Numerics
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Numerics
    name: Numerics
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Numerics
    name: Numerics
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics
- uid: Bliss.CSharp.Transformations.Transform.Up*
  commentId: Overload:Bliss.CSharp.Transformations.Transform.Up
  href: Bliss.CSharp.Transformations.Transform.html#Bliss_CSharp_Transformations_Transform_Up
  name: Up
  nameWithType: Transform.Up
  fullName: Bliss.CSharp.Transformations.Transform.Up
- uid: Bliss.CSharp.Transformations.Transform.Right*
  commentId: Overload:Bliss.CSharp.Transformations.Transform.Right
  href: Bliss.CSharp.Transformations.Transform.html#Bliss_CSharp_Transformations_Transform_Right
  name: Right
  nameWithType: Transform.Right
  fullName: Bliss.CSharp.Transformations.Transform.Right
- uid: System.Action{Bliss.CSharp.Transformations.Transform}
  commentId: T:System.Action{Bliss.CSharp.Transformations.Transform}
  parent: System
  definition: System.Action`1
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<Transform>
  nameWithType: Action<Transform>
  fullName: System.Action<Bliss.CSharp.Transformations.Transform>
  nameWithType.vb: Action(Of Transform)
  fullName.vb: System.Action(Of Bliss.CSharp.Transformations.Transform)
  name.vb: Action(Of Transform)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: Bliss.CSharp.Transformations.Transform
    name: Transform
    href: Bliss.CSharp.Transformations.Transform.html
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: Bliss.CSharp.Transformations.Transform
    name: Transform
    href: Bliss.CSharp.Transformations.Transform.html
  - name: )
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Bliss.CSharp.Transformations.Transform
  commentId: T:Bliss.CSharp.Transformations.Transform
  parent: Bliss.CSharp.Transformations
  href: Bliss.CSharp.Transformations.Transform.html
  name: Transform
  nameWithType: Transform
  fullName: Bliss.CSharp.Transformations.Transform
- uid: Bliss.CSharp.Transformations.Transform.#ctor*
  commentId: Overload:Bliss.CSharp.Transformations.Transform.#ctor
  href: Bliss.CSharp.Transformations.Transform.html#Bliss_CSharp_Transformations_Transform__ctor
  name: Transform
  nameWithType: Transform.Transform
  fullName: Bliss.CSharp.Transformations.Transform.Transform
  nameWithType.vb: Transform.New
  fullName.vb: Bliss.CSharp.Transformations.Transform.New
  name.vb: New
- uid: Bliss.CSharp.Transformations.Transform.OnUpdate
  commentId: E:Bliss.CSharp.Transformations.Transform.OnUpdate
  href: Bliss.CSharp.Transformations.Transform.html#Bliss_CSharp_Transformations_Transform_OnUpdate
  name: OnUpdate
  nameWithType: Transform.OnUpdate
  fullName: Bliss.CSharp.Transformations.Transform.OnUpdate
- uid: Bliss.CSharp.Transformations.Transform.Translation*
  commentId: Overload:Bliss.CSharp.Transformations.Transform.Translation
  href: Bliss.CSharp.Transformations.Transform.html#Bliss_CSharp_Transformations_Transform_Translation
  name: Translation
  nameWithType: Transform.Translation
  fullName: Bliss.CSharp.Transformations.Transform.Translation
- uid: Bliss.CSharp.Transformations.Transform.Rotation*
  commentId: Overload:Bliss.CSharp.Transformations.Transform.Rotation
  href: Bliss.CSharp.Transformations.Transform.html#Bliss_CSharp_Transformations_Transform_Rotation
  name: Rotation
  nameWithType: Transform.Rotation
  fullName: Bliss.CSharp.Transformations.Transform.Rotation
- uid: System.Numerics.Quaternion
  commentId: T:System.Numerics.Quaternion
  parent: System.Numerics
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.numerics.quaternion
  name: Quaternion
  nameWithType: Quaternion
  fullName: System.Numerics.Quaternion
- uid: Bliss.CSharp.Transformations.Transform.Scale*
  commentId: Overload:Bliss.CSharp.Transformations.Transform.Scale
  href: Bliss.CSharp.Transformations.Transform.html#Bliss_CSharp_Transformations_Transform_Scale
  name: Scale
  nameWithType: Transform.Scale
  fullName: Bliss.CSharp.Transformations.Transform.Scale
- uid: Bliss.CSharp.Transformations.Transform.op_Equality*
  commentId: Overload:Bliss.CSharp.Transformations.Transform.op_Equality
  href: Bliss.CSharp.Transformations.Transform.html#Bliss_CSharp_Transformations_Transform_op_Equality_Bliss_CSharp_Transformations_Transform_Bliss_CSharp_Transformations_Transform_
  name: operator ==
  nameWithType: Transform.operator ==
  fullName: Bliss.CSharp.Transformations.Transform.operator ==
  nameWithType.vb: Transform.=
  fullName.vb: Bliss.CSharp.Transformations.Transform.=
  name.vb: =
  spec.csharp:
  - name: operator
  - name: " "
  - uid: Bliss.CSharp.Transformations.Transform.op_Equality*
    name: ==
    href: Bliss.CSharp.Transformations.Transform.html#Bliss_CSharp_Transformations_Transform_op_Equality_Bliss_CSharp_Transformations_Transform_Bliss_CSharp_Transformations_Transform_
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Bliss.CSharp.Transformations.Transform.op_Inequality*
  commentId: Overload:Bliss.CSharp.Transformations.Transform.op_Inequality
  href: Bliss.CSharp.Transformations.Transform.html#Bliss_CSharp_Transformations_Transform_op_Inequality_Bliss_CSharp_Transformations_Transform_Bliss_CSharp_Transformations_Transform_
  name: operator !=
  nameWithType: Transform.operator !=
  fullName: Bliss.CSharp.Transformations.Transform.operator !=
  nameWithType.vb: Transform.<>
  fullName.vb: Bliss.CSharp.Transformations.Transform.<>
  name.vb: <>
  spec.csharp:
  - name: operator
  - name: " "
  - uid: Bliss.CSharp.Transformations.Transform.op_Inequality*
    name: '!='
    href: Bliss.CSharp.Transformations.Transform.html#Bliss_CSharp_Transformations_Transform_op_Inequality_Bliss_CSharp_Transformations_Transform_Bliss_CSharp_Transformations_Transform_
- uid: Bliss.CSharp.Transformations.Transform.GetTransform*
  commentId: Overload:Bliss.CSharp.Transformations.Transform.GetTransform
  href: Bliss.CSharp.Transformations.Transform.html#Bliss_CSharp_Transformations_Transform_GetTransform
  name: GetTransform
  nameWithType: Transform.GetTransform
  fullName: Bliss.CSharp.Transformations.Transform.GetTransform
- uid: System.Numerics.Matrix4x4
  commentId: T:System.Numerics.Matrix4x4
  parent: System.Numerics
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.numerics.matrix4x4
  name: Matrix4x4
  nameWithType: Matrix4x4
  fullName: System.Numerics.Matrix4x4
- uid: Bliss.CSharp.Transformations.Transform.Equals*
  commentId: Overload:Bliss.CSharp.Transformations.Transform.Equals
  href: Bliss.CSharp.Transformations.Transform.html#Bliss_CSharp_Transformations_Transform_Equals_Bliss_CSharp_Transformations_Transform_
  name: Equals
  nameWithType: Transform.Equals
  fullName: Bliss.CSharp.Transformations.Transform.Equals
- uid: System.IEquatable{Bliss.CSharp.Transformations.Transform}.Equals(Bliss.CSharp.Transformations.Transform)
  commentId: M:System.IEquatable{Bliss.CSharp.Transformations.Transform}.Equals(Bliss.CSharp.Transformations.Transform)
  parent: System.IEquatable{Bliss.CSharp.Transformations.Transform}
  definition: System.IEquatable`1.Equals(`0)
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  name: Equals(Transform)
  nameWithType: IEquatable<Transform>.Equals(Transform)
  fullName: System.IEquatable<Bliss.CSharp.Transformations.Transform>.Equals(Bliss.CSharp.Transformations.Transform)
  nameWithType.vb: IEquatable(Of Transform).Equals(Transform)
  fullName.vb: System.IEquatable(Of Bliss.CSharp.Transformations.Transform).Equals(Bliss.CSharp.Transformations.Transform)
  spec.csharp:
  - uid: System.IEquatable{Bliss.CSharp.Transformations.Transform}.Equals(Bliss.CSharp.Transformations.Transform)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - uid: Bliss.CSharp.Transformations.Transform
    name: Transform
    href: Bliss.CSharp.Transformations.Transform.html
  - name: )
  spec.vb:
  - uid: System.IEquatable{Bliss.CSharp.Transformations.Transform}.Equals(Bliss.CSharp.Transformations.Transform)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - uid: Bliss.CSharp.Transformations.Transform
    name: Transform
    href: Bliss.CSharp.Transformations.Transform.html
  - name: )
- uid: System.IEquatable`1.Equals(`0)
  commentId: M:System.IEquatable`1.Equals(`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  name: Equals(T)
  nameWithType: IEquatable<T>.Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  nameWithType.vb: IEquatable(Of T).Equals(T)
  fullName.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - name: T
  - name: )
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  name: Equals(object)
  nameWithType: ValueType.Equals(object)
  fullName: System.ValueType.Equals(object)
  nameWithType.vb: ValueType.Equals(Object)
  fullName.vb: System.ValueType.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
- uid: Bliss.CSharp.Transformations.Transform.GetHashCode*
  commentId: Overload:Bliss.CSharp.Transformations.Transform.GetHashCode
  href: Bliss.CSharp.Transformations.Transform.html#Bliss_CSharp_Transformations_Transform_GetHashCode
  name: GetHashCode
  nameWithType: Transform.GetHashCode
  fullName: Bliss.CSharp.Transformations.Transform.GetHashCode
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
- uid: Bliss.CSharp.Transformations.Transform.ToString*
  commentId: Overload:Bliss.CSharp.Transformations.Transform.ToString
  href: Bliss.CSharp.Transformations.Transform.html#Bliss_CSharp_Transformations_Transform_ToString
  name: ToString
  nameWithType: Transform.ToString
  fullName: Bliss.CSharp.Transformations.Transform.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
